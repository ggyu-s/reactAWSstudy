{"ast":null,"code":"import React from \"react\";\nimport { all, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport { LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_REQUEST, LOG_OUT_SUCCESS } from \"../reducers/user\";\n\nfunction logInAPI(data) {\n  return axios.post(\"/api/login\");\n}\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    console.log(action);\n    yield delay(2000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (error) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(2000);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (error) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* user() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}\n\nexport default user;","map":{"version":3,"sources":["/Users/ggyu/Library/Mobile Documents/com~apple~CloudDocs/My/Front/reactnodestudy/front/sagas/user.js"],"names":["React","all","delay","fork","put","takeLatest","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","logInAPI","data","axios","post","logIn","action","console","log","type","error","response","logOutAPI","logOut","LOG_OUT_FAILURE","watchLogIn","watchLogOut","user"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,UAAhC,QAAkD,oBAAlD;AACA,SACEC,cADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,eAJF,EAKEC,eALF,QAMO,kBANP;;AAQA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,SAAOC,KAAK,CAACC,IAAN,CAAW,YAAX,CAAP;AACD;;AAED,UAAUC,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAI;AACF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,UAAMd,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAEX,cADE;AAERI,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAID,GARD,CAQE,OAAOQ,KAAP,EAAc;AACd,UAAMhB,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAEb,cADE;AAERM,MAAAA,IAAI,EAAEQ,KAAK,CAACC,QAAN,CAAeT;AAFb,KAAD,CAAT;AAID;AACF;;AAED,SAASU,SAAT,GAAqB;AACnB,SAAOT,KAAK,CAACC,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,UAAUS,MAAV,GAAmB;AACjB,MAAI;AACF;AACA,UAAMrB,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAET;AADE,KAAD,CAAT;AAGD,GAND,CAME,OAAOU,KAAP,EAAc;AACd,UAAMhB,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAEK,eADE;AAERZ,MAAAA,IAAI,EAAEQ,KAAK,CAACC,QAAN,CAAeT;AAFb,KAAD,CAAT;AAID;AACF;;AAED,UAAUa,UAAV,GAAuB;AACrB,QAAMpB,UAAU,CAACE,cAAD,EAAiBQ,KAAjB,CAAhB;AACD;;AAED,UAAUW,WAAV,GAAwB;AACtB,QAAMrB,UAAU,CAACI,eAAD,EAAkBc,MAAlB,CAAhB;AACD;;AAED,UAAUI,IAAV,GAAiB;AACf,QAAM1B,GAAG,CAAC,CAACE,IAAI,CAACsB,UAAD,CAAL,EAAmBtB,IAAI,CAACuB,WAAD,CAAvB,CAAD,CAAT;AACD;;AAED,eAAeC,IAAf","sourcesContent":["import React from \"react\";\nimport { all, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport {\n  LOG_IN_FAILURE,\n  LOG_IN_REQUEST,\n  LOG_IN_SUCCESS,\n  LOG_OUT_REQUEST,\n  LOG_OUT_SUCCESS,\n} from \"../reducers/user\";\n\nfunction logInAPI(data) {\n  return axios.post(\"/api/login\");\n}\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    console.log(action);\n    yield delay(2000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data,\n    });\n  } catch (error) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(2000);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n    });\n  } catch (error) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* user() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}\n\nexport default user;\n"]},"metadata":{},"sourceType":"module"}
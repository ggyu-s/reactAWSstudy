{"ast":null,"code":"import { all, call, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, LIKE_POST_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LOAD_POSTS_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, UNLIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS } from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\n\nfunction loadPostsAPI(data) {\n  return axios.get(\"/posts\");\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.data);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: LIKE_POST_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction unLikePostAPI(data) {\n  return axios.delete(`/post/${data}/unlike`);\n}\n\nfunction* unLikePost(action) {\n  try {\n    const result = yield call(unLikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post(`/post/images`, data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction* watchLoadPosts() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchLike() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnLike() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unLikePost);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* post() {\n  yield all([fork(watchLoadPosts), fork(watchAddPost), fork(watchAddComment), fork(watchRemovePost), fork(watchLike), fork(watchUnLike), fork(watchUploadImages)]);\n}\n\nexport default post;","map":{"version":3,"sources":["/Users/ggyu/Library/Mobile Documents/com~apple~CloudDocs/My/Front/reactnodestudy/front/sagas/post.js"],"names":["all","call","fork","put","takeLatest","axios","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","LIKE_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","UNLIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UPLOAD_IMAGES_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loadPostsAPI","data","get","loadPosts","action","result","type","error","response","addPostAPI","post","addPost","id","addCommentAPI","postId","addComment","removePostAPI","delete","removePost","console","likePostAPI","patch","likePost","unLikePostAPI","unLikePost","uploadImagesAPI","uploadImages","watchLoadPosts","watchAddPost","watchAddComment","watchRemovePost","watchLike","watchUnLike","watchUploadImages"],"mappings":"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","sourcesContent":["import { all, call, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  ADD_COMMENT_FAILURE,\n  ADD_COMMENT_REQUEST,\n  ADD_COMMENT_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  LIKE_POST_FAILURE,\n  LIKE_POST_REQUEST,\n  LIKE_POST_SUCCESS,\n  LOAD_POSTS_FAILURE,\n  LOAD_POSTS_REQUEST,\n  LOAD_POSTS_SUCCESS,\n  REMOVE_POST_FAILURE,\n  REMOVE_POST_REQUEST,\n  REMOVE_POST_SUCCESS,\n  UNLIKE_POST_FAILURE,\n  UNLIKE_POST_REQUEST,\n  UNLIKE_POST_SUCCESS,\n  UPLOAD_IMAGES_FAILURE,\n  UPLOAD_IMAGES_REQUEST,\n  UPLOAD_IMAGES_SUCCESS,\n} from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\n\nfunction loadPostsAPI(data) {\n  return axios.get(\"/posts\");\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.data);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id,\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: LIKE_POST_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction unLikePostAPI(data) {\n  return axios.delete(`/post/${data}/unlike`);\n}\n\nfunction* unLikePost(action) {\n  try {\n    const result = yield call(unLikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post(`/post/images`, data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction* watchLoadPosts() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchLike() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnLike() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unLikePost);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* post() {\n  yield all([\n    fork(watchLoadPosts),\n    fork(watchAddPost),\n    fork(watchAddComment),\n    fork(watchRemovePost),\n    fork(watchLike),\n    fork(watchUnLike),\n    fork(watchUploadImages),\n  ]);\n}\n\nexport default post;\n"]},"metadata":{},"sourceType":"module"}
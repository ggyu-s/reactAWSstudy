{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(loadPosts),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(loadPost),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(loadUserPosts),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(loadHashtagPosts),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(addPost),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(addComment),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(removePost),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(likePost),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(unLikePost),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(uploadImages),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(retweet),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadPosts),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadPost),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadUserPosts),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadHashtagPosts),\n    _marked16 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddPost),\n    _marked17 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddComment),\n    _marked18 = /*#__PURE__*/_regeneratorRuntime.mark(watchRemovePost),\n    _marked19 = /*#__PURE__*/_regeneratorRuntime.mark(watchLike),\n    _marked20 = /*#__PURE__*/_regeneratorRuntime.mark(watchUnLike),\n    _marked21 = /*#__PURE__*/_regeneratorRuntime.mark(watchUploadImages),\n    _marked22 = /*#__PURE__*/_regeneratorRuntime.mark(watchRetweet),\n    _marked23 = /*#__PURE__*/_regeneratorRuntime.mark(post);\n\nimport { all, call, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, LIKE_POST_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LOAD_HASHTAG_POSTS_FAILURE, LOAD_HASHTAG_POSTS_REQUEST, LOAD_HASHTAG_POSTS_SUCCESS, LOAD_POSTS_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POST_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_USER_POSTS_FAILURE, LOAD_USER_POSTS_REQUEST, LOAD_USER_POSTS_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, RETWEET_FAILURE, RETWEET_REQUEST, RETWEET_SUCCESS, UNLIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS } from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\n\nfunction loadPostsAPI(lastId) {\n  return axios.get(\"/posts?lastId=\".concat(lastId || 0));\n}\n\nfunction loadPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadPosts$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(loadPostsAPI, action.lastId);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: LOAD_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          _context.next = 13;\n          return put({\n            type: LOAD_POSTS_FAILURE,\n            data: _context.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(\"/post/\".concat(data));\n}\n\nfunction loadPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadPost$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(loadPostAPI, action.data);\n\n        case 3:\n          result = _context2.sent;\n          _context2.next = 6;\n          return put({\n            type: LOAD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context2.next = 13;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0);\n          _context2.next = 13;\n          return put({\n            type: LOAD_POST_FAILURE,\n            data: _context2.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\n\nfunction loadUserPostsAPI(data, lastId) {\n  return axios.get(\"/user/\".concat(data, \"/posts?lastId=\").concat(lastId || 0));\n}\n\nfunction loadUserPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadUserPosts$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(loadUserPostsAPI, action.data, action.lastId);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: LOAD_USER_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context3.next = 13;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0);\n          _context3.next = 13;\n          return put({\n            type: LOAD_USER_POSTS_FAILURE,\n            data: _context3.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction loadHashtagPostsAPI(data, lastId) {\n  return axios.get(\"/hashtag/\".concat(data, \"?lastId=\").concat(lastId || 0));\n}\n\nfunction loadHashtagPosts(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadHashtagPosts$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(loadHashtagPostsAPI, action.data, action.lastId);\n\n        case 3:\n          result = _context4.sent;\n          _context4.next = 6;\n          return put({\n            type: LOAD_HASHTAG_POSTS_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context4.next = 13;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.log(_context4.t0);\n          _context4.next = 13;\n          return put({\n            type: LOAD_HASHTAG_POSTS_FAILURE,\n            data: _context4.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n}\n\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", data);\n}\n\nfunction addPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addPost$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(addPostAPI, action.data);\n\n        case 3:\n          result = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: ADD_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context5.next = 8;\n          return put({\n            type: ADD_POST_TO_ME,\n            data: result.data.id\n          });\n\n        case 8:\n          _context5.next = 14;\n          break;\n\n        case 10:\n          _context5.prev = 10;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 14;\n          return put({\n            type: ADD_POST_FAILURE,\n            data: _context5.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 10]]);\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(\"/post/\".concat(data.postId, \"/comment\"), data);\n}\n\nfunction addComment(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addComment$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(addCommentAPI, action.data);\n\n        case 3:\n          result = _context6.sent;\n          _context6.next = 6;\n          return put({\n            type: ADD_COMMENT_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context6.next = 12;\n          break;\n\n        case 8:\n          _context6.prev = 8;\n          _context6.t0 = _context6[\"catch\"](0);\n          _context6.next = 12;\n          return put({\n            type: ADD_COMMENT_FAILURE,\n            data: _context6.t0.response.data\n          });\n\n        case 12:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 8]]);\n}\n\nfunction removePostAPI(data) {\n  return axios[\"delete\"](\"/post/\".concat(data));\n}\n\nfunction removePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function removePost$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(removePostAPI, action.data);\n\n        case 3:\n          result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            type: REMOVE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context7.next = 8;\n          return put({\n            type: REMOVE_POST_OF_ME,\n            data: action.data\n          });\n\n        case 8:\n          _context7.next = 15;\n          break;\n\n        case 10:\n          _context7.prev = 10;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.error(_context7.t0);\n          _context7.next = 15;\n          return put({\n            type: REMOVE_POST_FAILURE,\n            data: _context7.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 10]]);\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(\"/post/\".concat(data, \"/like\"));\n}\n\nfunction likePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function likePost$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.prev = 0;\n          _context8.next = 3;\n          return call(likePostAPI, action.data);\n\n        case 3:\n          result = _context8.sent;\n          _context8.next = 6;\n          return put({\n            type: LIKE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context8.next = 13;\n          break;\n\n        case 8:\n          _context8.prev = 8;\n          _context8.t0 = _context8[\"catch\"](0);\n          console.error(_context8.t0);\n          _context8.next = 13;\n          return put({\n            type: LIKE_POST_FAILURE,\n            data: _context8.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8, null, [[0, 8]]);\n}\n\nfunction unLikePostAPI(data) {\n  return axios[\"delete\"](\"/post/\".concat(data, \"/unlike\"));\n}\n\nfunction unLikePost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function unLikePost$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return call(unLikePostAPI, action.data);\n\n        case 3:\n          result = _context9.sent;\n          _context9.next = 6;\n          return put({\n            type: UNLIKE_POST_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context9.next = 13;\n          break;\n\n        case 8:\n          _context9.prev = 8;\n          _context9.t0 = _context9[\"catch\"](0);\n          console.error(_context9.t0);\n          _context9.next = 13;\n          return put({\n            type: UNLIKE_POST_FAILURE,\n            data: _context9.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 8]]);\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post(\"/post/images\", data);\n}\n\nfunction uploadImages(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function uploadImages$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.prev = 0;\n          _context10.next = 3;\n          return call(uploadImagesAPI, action.data);\n\n        case 3:\n          result = _context10.sent;\n          _context10.next = 6;\n          return put({\n            type: UPLOAD_IMAGES_SUCCESS,\n            data: result.data\n          });\n\n        case 6:\n          _context10.next = 13;\n          break;\n\n        case 8:\n          _context10.prev = 8;\n          _context10.t0 = _context10[\"catch\"](0);\n          console.error(_context10.t0);\n          _context10.next = 13;\n          return put({\n            type: UPLOAD_IMAGES_FAILURE,\n            data: _context10.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10, null, [[0, 8]]);\n}\n\nfunction retweetAPI(data) {\n  return axios.post(\"/post/\".concat(data, \"/retweet\"), data);\n}\n\nfunction retweet(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function retweet$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return call(retweetAPI, action.data);\n\n        case 3:\n          result = _context11.sent;\n          console.log(result);\n          _context11.next = 7;\n          return put({\n            type: RETWEET_SUCCESS,\n            data: result.data\n          });\n\n        case 7:\n          _context11.next = 14;\n          break;\n\n        case 9:\n          _context11.prev = 9;\n          _context11.t0 = _context11[\"catch\"](0);\n          console.error(_context11.t0);\n          _context11.next = 14;\n          return put({\n            type: RETWEET_FAILURE,\n            error: _context11.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[0, 9]]);\n}\n\nfunction watchLoadPosts() {\n  return _regeneratorRuntime.wrap(function watchLoadPosts$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction watchLoadPost() {\n  return _regeneratorRuntime.wrap(function watchLoadPost$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return takeLatest(LOAD_POST_REQUEST, loadPost);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}\n\nfunction watchLoadUserPosts() {\n  return _regeneratorRuntime.wrap(function watchLoadUserPosts$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeLatest(LOAD_USER_POSTS_REQUEST, loadUserPosts);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\nfunction watchLoadHashtagPosts() {\n  return _regeneratorRuntime.wrap(function watchLoadHashtagPosts$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return takeLatest(LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\n\n        case 2:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15);\n}\n\nfunction watchAddPost() {\n  return _regeneratorRuntime.wrap(function watchAddPost$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return takeLatest(ADD_POST_REQUEST, addPost);\n\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n}\n\nfunction watchAddComment() {\n  return _regeneratorRuntime.wrap(function watchAddComment$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.next = 2;\n          return takeLatest(ADD_COMMENT_REQUEST, addComment);\n\n        case 2:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17);\n}\n\nfunction watchRemovePost() {\n  return _regeneratorRuntime.wrap(function watchRemovePost$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return takeLatest(REMOVE_POST_REQUEST, removePost);\n\n        case 2:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, _marked18);\n}\n\nfunction watchLike() {\n  return _regeneratorRuntime.wrap(function watchLike$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.next = 2;\n          return takeLatest(LIKE_POST_REQUEST, likePost);\n\n        case 2:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, _marked19);\n}\n\nfunction watchUnLike() {\n  return _regeneratorRuntime.wrap(function watchUnLike$(_context20) {\n    while (1) {\n      switch (_context20.prev = _context20.next) {\n        case 0:\n          _context20.next = 2;\n          return takeLatest(UNLIKE_POST_REQUEST, unLikePost);\n\n        case 2:\n        case \"end\":\n          return _context20.stop();\n      }\n    }\n  }, _marked20);\n}\n\nfunction watchUploadImages() {\n  return _regeneratorRuntime.wrap(function watchUploadImages$(_context21) {\n    while (1) {\n      switch (_context21.prev = _context21.next) {\n        case 0:\n          _context21.next = 2;\n          return takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n\n        case 2:\n        case \"end\":\n          return _context21.stop();\n      }\n    }\n  }, _marked21);\n}\n\nfunction watchRetweet() {\n  return _regeneratorRuntime.wrap(function watchRetweet$(_context22) {\n    while (1) {\n      switch (_context22.prev = _context22.next) {\n        case 0:\n          _context22.next = 2;\n          return takeLatest(RETWEET_REQUEST, retweet);\n\n        case 2:\n        case \"end\":\n          return _context22.stop();\n      }\n    }\n  }, _marked22);\n}\n\nfunction post() {\n  return _regeneratorRuntime.wrap(function post$(_context23) {\n    while (1) {\n      switch (_context23.prev = _context23.next) {\n        case 0:\n          _context23.next = 2;\n          return all([fork(watchLoadPosts), fork(watchLoadPost), fork(watchLoadUserPosts), fork(watchLoadHashtagPosts), fork(watchAddPost), fork(watchAddComment), fork(watchRemovePost), fork(watchLike), fork(watchUnLike), fork(watchUploadImages), fork(watchRetweet)]);\n\n        case 2:\n        case \"end\":\n          return _context23.stop();\n      }\n    }\n  }, _marked23);\n}\n\nexport default post;","map":{"version":3,"sources":["/Users/ggyu/Library/Mobile Documents/com~apple~CloudDocs/My/Front/reactnodestudy/front/sagas/post.js"],"names":["loadPosts","loadPost","loadUserPosts","loadHashtagPosts","addPost","addComment","removePost","likePost","unLikePost","uploadImages","retweet","watchLoadPosts","watchLoadPost","watchLoadUserPosts","watchLoadHashtagPosts","watchAddPost","watchAddComment","watchRemovePost","watchLike","watchUnLike","watchUploadImages","watchRetweet","post","all","call","fork","put","takeLatest","axios","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","LIKE_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_USER_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","RETWEET_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","UNLIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UPLOAD_IMAGES_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loadPostsAPI","lastId","get","action","result","type","data","console","log","response","loadPostAPI","loadUserPostsAPI","loadHashtagPostsAPI","addPostAPI","id","addCommentAPI","postId","removePostAPI","error","likePostAPI","patch","unLikePostAPI","uploadImagesAPI","retweetAPI"],"mappings":"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","sourcesContent":["import { all, call, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  ADD_COMMENT_FAILURE,\n  ADD_COMMENT_REQUEST,\n  ADD_COMMENT_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  LIKE_POST_FAILURE,\n  LIKE_POST_REQUEST,\n  LIKE_POST_SUCCESS,\n  LOAD_HASHTAG_POSTS_FAILURE,\n  LOAD_HASHTAG_POSTS_REQUEST,\n  LOAD_HASHTAG_POSTS_SUCCESS,\n  LOAD_POSTS_FAILURE,\n  LOAD_POSTS_REQUEST,\n  LOAD_POSTS_SUCCESS,\n  LOAD_POST_FAILURE,\n  LOAD_POST_REQUEST,\n  LOAD_POST_SUCCESS,\n  LOAD_USER_POSTS_FAILURE,\n  LOAD_USER_POSTS_REQUEST,\n  LOAD_USER_POSTS_SUCCESS,\n  REMOVE_POST_FAILURE,\n  REMOVE_POST_REQUEST,\n  REMOVE_POST_SUCCESS,\n  RETWEET_FAILURE,\n  RETWEET_REQUEST,\n  RETWEET_SUCCESS,\n  UNLIKE_POST_FAILURE,\n  UNLIKE_POST_REQUEST,\n  UNLIKE_POST_SUCCESS,\n  UPLOAD_IMAGES_FAILURE,\n  UPLOAD_IMAGES_REQUEST,\n  UPLOAD_IMAGES_SUCCESS,\n} from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\n\nfunction loadPostsAPI(lastId) {\n  return axios.get(`/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.lastId);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(`/post/${data}`);\n}\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: LOAD_POST_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction loadUserPostsAPI(data, lastId) {\n  return axios.get(`/user/${data}/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadUserPosts(action) {\n  try {\n    const result = yield call(loadUserPostsAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_USER_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: LOAD_USER_POSTS_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction loadHashtagPostsAPI(data, lastId) {\n  return axios.get(`/hashtag/${data}?lastId=${lastId || 0}`);\n}\n\nfunction* loadHashtagPosts(action) {\n  try {\n    const result = yield call(loadHashtagPostsAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id,\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: LIKE_POST_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction unLikePostAPI(data) {\n  return axios.delete(`/post/${data}/unlike`);\n}\n\nfunction* unLikePost(action) {\n  try {\n    const result = yield call(unLikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post(`/post/images`, data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction retweetAPI(data) {\n  return axios.post(`/post/${data}/retweet`, data);\n}\n\nfunction* retweet(action) {\n  try {\n    const result = yield call(retweetAPI, action.data);\n    console.log(result);\n    yield put({\n      type: RETWEET_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: RETWEET_FAILURE,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction* watchLoadPosts() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchLoadUserPosts() {\n  yield takeLatest(LOAD_USER_POSTS_REQUEST, loadUserPosts);\n}\n\nfunction* watchLoadHashtagPosts() {\n  yield takeLatest(LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchLike() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnLike() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unLikePost);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* watchRetweet() {\n  yield takeLatest(RETWEET_REQUEST, retweet);\n}\n\nfunction* post() {\n  yield all([\n    fork(watchLoadPosts),\n    fork(watchLoadPost),\n    fork(watchLoadUserPosts),\n    fork(watchLoadHashtagPosts),\n    fork(watchAddPost),\n    fork(watchAddComment),\n    fork(watchRemovePost),\n    fork(watchLike),\n    fork(watchUnLike),\n    fork(watchUploadImages),\n    fork(watchRetweet),\n  ]);\n}\n\nexport default post;\n"]},"metadata":{},"sourceType":"module"}
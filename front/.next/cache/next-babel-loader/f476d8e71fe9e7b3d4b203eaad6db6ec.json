{"ast":null,"code":"import React from \"react\";\nimport { all, fork } from \"redux-saga/effects\";\nimport { LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_REQUEST, LOG_OUT_SUCCESS } from \"../reducers/user\";\n\nfunction logInAPI(data) {\n  return axios.post(\"/api/login\");\n}\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(2000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (error) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(2000);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* user() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}\n\nexport default user;","map":{"version":3,"sources":["/Users/ggyu/Library/Mobile Documents/com~apple~CloudDocs/My/Front/reactnodestudy/front/sagas/user.js"],"names":["React","all","fork","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","logInAPI","data","axios","post","logIn","action","delay","put","type","error","response","logOutAPI","logOut","result","LOG_OUT_FAILURE","watchLogIn","takeLatest","watchLogOut","user"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,oBAA1B;AACA,SACEC,cADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,eAJF,EAKEC,eALF,QAMO,kBANP;;AAOA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,SAAOC,KAAK,CAACC,IAAN,CAAW,YAAX,CAAP;AACD;;AAED,UAAUC,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAI;AACF;AACA,UAAMC,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACRC,MAAAA,IAAI,EAAEX,cADE;AAERI,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOQ,KAAP,EAAc;AACd,UAAMF,GAAG,CAAC;AACRC,MAAAA,IAAI,EAAEb,cADE;AAERM,MAAAA,IAAI,EAAEQ,KAAK,CAACC,QAAN,CAAeT;AAFb,KAAD,CAAT;AAID;AACF;;AAED,SAASU,SAAT,GAAqB;AACnB,SAAOT,KAAK,CAACC,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,UAAUS,MAAV,GAAmB;AACjB,MAAI;AACF;AACA,UAAMN,KAAK,CAAC,IAAD,CAAX;AACA,UAAMC,GAAG,CAAC;AACRC,MAAAA,IAAI,EAAET,eADE;AAERE,MAAAA,IAAI,EAAEY,MAAM,CAACZ;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOQ,KAAP,EAAc;AACd,UAAMF,GAAG,CAAC;AACRC,MAAAA,IAAI,EAAEM,eADE;AAERb,MAAAA,IAAI,EAAEQ,KAAK,CAACC,QAAN,CAAeT;AAFb,KAAD,CAAT;AAID;AACF;;AAED,UAAUc,UAAV,GAAuB;AACrB,QAAMC,UAAU,CAACpB,cAAD,EAAiBQ,KAAjB,CAAhB;AACD;;AAED,UAAUa,WAAV,GAAwB;AACtB,QAAMD,UAAU,CAAClB,eAAD,EAAkBc,MAAlB,CAAhB;AACD;;AAED,UAAUM,IAAV,GAAiB;AACf,QAAMzB,GAAG,CAAC,CAACC,IAAI,CAACqB,UAAD,CAAL,EAAmBrB,IAAI,CAACuB,WAAD,CAAvB,CAAD,CAAT;AACD;;AAED,eAAeC,IAAf","sourcesContent":["import React from \"react\";\nimport { all, fork } from \"redux-saga/effects\";\nimport {\n  LOG_IN_FAILURE,\n  LOG_IN_REQUEST,\n  LOG_IN_SUCCESS,\n  LOG_OUT_REQUEST,\n  LOG_OUT_SUCCESS,\n} from \"../reducers/user\";\nfunction logInAPI(data) {\n  return axios.post(\"/api/login\");\n}\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(2000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data,\n    });\n  } catch (error) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(2000);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* user() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}\n\nexport default user;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useRouter } from \"next/router\";\nimport AppLayout from \"../../components/AppLayout\";\nimport PostCard from \"../../components/PostCard\";\nimport { LOAD_HASHTAG_POSTS_REQUEST } from \"../../reducers/post\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction Hashtag() {\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var tag = router.query.tag;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePosts = _useSelector.hasMorePosts,\n      loadPostsLoading = _useSelector.loadPostsLoading;\n\n  useEffect(function () {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          console.log(hasMorePosts, loadPostsLoading);\n          dispatch({\n            type: LOAD_HASHTAG_POSTS_REQUEST,\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n            data: tag\n          });\n        }\n      }\n    }\n\n    window.addEventListener(\"scroll\", onScroll);\n    return function () {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePosts, mainPosts.length, tag, loadPostsLoading]);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(AppLayout, {\n      children: mainPosts.map(function (c) {\n        return /*#__PURE__*/_jsx(PostCard, {\n          post: c\n        }, c.id);\n      })\n    })\n  });\n}\n\nexport var __N_SSP = true;\nexport default Hashtag;","map":null,"metadata":{},"sourceType":"module"}
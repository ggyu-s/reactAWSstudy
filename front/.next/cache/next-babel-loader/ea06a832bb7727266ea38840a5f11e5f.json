{"ast":null,"code":"import React, { useCallback, useEffect, useState } from \"react\";\nimport Head from \"next/head\";\nimport { Button, Checkbox, Form, Input } from \"antd\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Router from \"next/router\";\nimport axios from \"axios\";\nimport { END } from \"redux-saga\";\nimport AppLayout from \"../components/AppLayout\";\nimport useInput from \"../hooks/useInput\";\nimport { LOAD_MY_INFO_REQUEST, SIGN_UP_REQUEST } from \"../reducers/user\";\nimport wrapper from \"../store/configureStore\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nconst ErrorMessage = styled.div.withConfig({\n  displayName: \"signup__ErrorMessage\",\n  componentId: \"p2pewj-0\"\n})([\"color:red;\"]);\n\nfunction Signup() {\n  const dispatch = useDispatch();\n  const {\n    signUpLoading,\n    signUpDone,\n    signUpError,\n    me\n  } = useSelector(state => state.user);\n  const [email, onChangeEmail] = useInput(\"\");\n  const [nickname, onChangeNickname] = useInput(\"\");\n  const [password, onChangePassword] = useInput(\"\");\n  const {\n    0: passwordCheck,\n    1: setPasswordCheck\n  } = useState(\"\");\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(false);\n  const {\n    0: term,\n    1: setTerm\n  } = useState(false);\n  const {\n    0: termError,\n    1: setTermError\n  } = useState(false);\n  const onChangePasswordCheck = useCallback(e => {\n    setPasswordCheck(e.target.value);\n    setPasswordError(e.target.value !== password);\n  }, [password]);\n  const onChangeTerm = useCallback(() => {\n    setTerm(prev => !prev);\n    setTermError(false);\n  }, []);\n  const onSubmit = useCallback(() => {\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    console.log(email, nickname, password);\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        email,\n        nickname,\n        password\n      }\n    });\n  }, [email, nickname, password, passwordCheck, term]);\n  useEffect(() => {\n    if (me && me.id) {\n      Router.replace(\"/\");\n    }\n  }, [me && me.id]);\n  useEffect(() => {\n    if (signUpError) {\n      alert(signUpError);\n    }\n  }, [signUpError]);\n  useEffect(() => {\n    if (signUpDone) {\n      Router.replace(\"/\");\n    }\n  }, [signUpDone]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"meta\", {\n        charSet: \"utf-8\"\n      }), /*#__PURE__*/_jsx(\"title\", {\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785 NodeBird\"\n      })]\n    }), /*#__PURE__*/_jsx(AppLayout, {\n      children: /*#__PURE__*/_jsxs(Form, {\n        onFinish: onSubmit,\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"user-email\",\n            children: \"\\uC774\\uBA54\\uC77C\"\n          }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n            name: \"user-email\",\n            value: email,\n            required: true,\n            onChange: onChangeEmail,\n            type: \"email\"\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"user-nick\",\n            children: \"\\uB2C9\\uB124\\uC784\"\n          }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n            name: \"user-nick\",\n            value: nickname,\n            required: true,\n            onChange: onChangeNickname\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"user-password\",\n            children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n          }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n            name: \"user-password\",\n            value: password,\n            required: true,\n            onChange: onChangePassword,\n            type: \"password\"\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"user-password-check\",\n            children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uCCB4\\uD06C\"\n          }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n            name: \"user-password-check\",\n            value: passwordCheck,\n            required: true,\n            onChange: onChangePasswordCheck,\n            type: \"password\"\n          }), passwordError && /*#__PURE__*/_jsx(ErrorMessage, {\n            children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCC28\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          children: [/*#__PURE__*/_jsx(Checkbox, {\n            name: \"user-term\",\n            checked: term,\n            onChange: onChangeTerm,\n            children: \"\\uB028 \\uB9D0\\uC744 \\uC798 \\uB4E4\\uC744 \\uAC83\\uC744 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"\n          }), termError && /*#__PURE__*/_jsx(ErrorMessage, {\n            children: \"\\uC57D\\uAD00 \\uB3D9\\uC758\\uD558\\uC9C0 \\uC54A\\uC558\\uC2B5\\uB2C8\\uB2E4.\"\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          style: {\n            marginTop: 10\n          },\n          children: /*#__PURE__*/_jsx(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            loading: signUpLoading,\n            children: \"\\uAC00\\uC785\\uD558\\uAE30\"\n          })\n        })]\n      })\n    })]\n  });\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : \"\";\n  axios.defaults.headers.Cookie = \"\";\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POSTS_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Signup;","map":{"version":3,"sources":["/Users/ggyu/Library/Mobile Documents/com~apple~CloudDocs/My/Front/reactnodestudy/front/pages/signup.js"],"names":["React","useCallback","useEffect","useState","Head","Button","Checkbox","Form","Input","styled","useDispatch","useSelector","Router","axios","END","AppLayout","useInput","LOAD_MY_INFO_REQUEST","SIGN_UP_REQUEST","wrapper","LOAD_POSTS_REQUEST","ErrorMessage","div","Signup","dispatch","signUpLoading","signUpDone","signUpError","me","state","user","email","onChangeEmail","nickname","onChangeNickname","password","onChangePassword","passwordCheck","setPasswordCheck","passwordError","setPasswordError","term","setTerm","termError","setTermError","onChangePasswordCheck","e","target","value","onChangeTerm","prev","onSubmit","console","log","type","data","id","replace","alert","marginTop","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport Head from \"next/head\";\nimport { Button, Checkbox, Form, Input } from \"antd\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Router from \"next/router\";\nimport axios from \"axios\";\nimport { END } from \"redux-saga\";\n\nimport AppLayout from \"../components/AppLayout\";\nimport useInput from \"../hooks/useInput\";\nimport { LOAD_MY_INFO_REQUEST, SIGN_UP_REQUEST } from \"../reducers/user\";\nimport wrapper from \"../store/configureStore\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\n\nconst ErrorMessage = styled.div`\n  color: red;\n`;\n\nfunction Signup() {\n  const dispatch = useDispatch();\n  const { signUpLoading, signUpDone, signUpError, me } = useSelector(\n    (state) => state.user\n  );\n  const [email, onChangeEmail] = useInput(\"\");\n  const [nickname, onChangeNickname] = useInput(\"\");\n  const [password, onChangePassword] = useInput(\"\");\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(false);\n  const [term, setTerm] = useState(false);\n  const [termError, setTermError] = useState(false);\n\n  const onChangePasswordCheck = useCallback(\n    (e) => {\n      setPasswordCheck(e.target.value);\n      setPasswordError(e.target.value !== password);\n    },\n    [password]\n  );\n\n  const onChangeTerm = useCallback(() => {\n    setTerm((prev) => !prev);\n    setTermError(false);\n  }, []);\n\n  const onSubmit = useCallback(() => {\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n    if (!term) {\n      return setTermError(true);\n    }\n    console.log(email, nickname, password);\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        email,\n        nickname,\n        password,\n      },\n    });\n  }, [email, nickname, password, passwordCheck, term]);\n\n  useEffect(() => {\n    if (me && me.id) {\n      Router.replace(\"/\");\n    }\n  }, [me && me.id]);\n  useEffect(() => {\n    if (signUpError) {\n      alert(signUpError);\n    }\n  }, [signUpError]);\n\n  useEffect(() => {\n    if (signUpDone) {\n      Router.replace(\"/\");\n    }\n  }, [signUpDone]);\n\n  return (\n    <>\n      <Head>\n        <meta charSet=\"utf-8\" />\n        <title>회원가입 NodeBird</title>\n      </Head>\n      <AppLayout>\n        <Form onFinish={onSubmit}>\n          <div>\n            <label htmlFor=\"user-email\">이메일</label>\n            <br />\n            <Input\n              name=\"user-email\"\n              value={email}\n              required\n              onChange={onChangeEmail}\n              type=\"email\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"user-nick\">닉네임</label>\n            <br />\n            <Input\n              name=\"user-nick\"\n              value={nickname}\n              required\n              onChange={onChangeNickname}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"user-password\">비밀번호</label>\n            <br />\n            <Input\n              name=\"user-password\"\n              value={password}\n              required\n              onChange={onChangePassword}\n              type=\"password\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"user-password-check\">비밀번호체크</label>\n            <br />\n            <Input\n              name=\"user-password-check\"\n              value={passwordCheck}\n              required\n              onChange={onChangePasswordCheck}\n              type=\"password\"\n            />\n            {passwordError && (\n              <ErrorMessage>비밀번호가 일차하지 않습니다.</ErrorMessage>\n            )}\n          </div>\n          <div>\n            <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>\n              뀨 말을 잘 들을 것을 동의합니다.\n            </Checkbox>\n            {termError && (\n              <ErrorMessage>약관 동의하지 않았습니다.</ErrorMessage>\n            )}\n          </div>\n          <div style={{ marginTop: 10 }}>\n            <Button type=\"primary\" htmlType=\"submit\" loading={signUpLoading}>\n              가입하기\n            </Button>\n          </div>\n        </Form>\n      </AppLayout>\n    </>\n  );\n}\nexport const getServerSideProps = wrapper.getServerSideProps(\n  async (context) => {\n    const cookie = context.req ? context.req.headers.cookie : \"\";\n    axios.defaults.headers.Cookie = \"\";\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n    });\n    context.store.dispatch({\n      type: LOAD_POSTS_REQUEST,\n    });\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}
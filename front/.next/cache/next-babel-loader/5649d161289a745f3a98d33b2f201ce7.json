{"ast":null,"code":"import { all, delay, fork, put, takeLatest, throttle } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport shortId from \"shortid\";\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, generateDummyPost, LOAD_POSTS_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS } from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\n\nfunction loadPostsAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* loadPosts(action) {\n  try {\n    // const result = yield call(loadPostsAPI);\n    yield delay(1000);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: generateDummyPost(10)\n    });\n  } catch (error) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction addPostAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI);\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      id,\n      content: action.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction addCommentAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addPostAPI);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction removePostAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* removePost(action) {\n  try {\n    // const result = yield call(removePostAPI);\n    yield delay(1000);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction* watchLoadPosts() {\n  yield throttle(2000, LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* post() {\n  yield all([fork(watchLoadPosts), fork(watchAddPost), fork(watchAddComment), fork(watchRemovePost)]);\n}\n\nexport default post;","map":{"version":3,"sources":["/Users/ggyu/Library/Mobile Documents/com~apple~CloudDocs/My/Front/reactnodestudy/front/sagas/post.js"],"names":["all","delay","fork","put","takeLatest","throttle","axios","shortId","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","generateDummyPost","LOAD_POSTS_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loadPostsAPI","post","loadPosts","action","type","data","error","response","addPostAPI","addPost","id","generate","content","console","log","addCommentAPI","addComment","removePostAPI","removePost","watchLoadPosts","watchAddPost","watchAddComment","watchRemovePost"],"mappings":"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","sourcesContent":["import {\n  all,\n  delay,\n  fork,\n  put,\n  takeLatest,\n  throttle,\n} from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport shortId from \"shortid\";\nimport {\n  ADD_COMMENT_FAILURE,\n  ADD_COMMENT_REQUEST,\n  ADD_COMMENT_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  generateDummyPost,\n  LOAD_POSTS_FAILURE,\n  LOAD_POSTS_REQUEST,\n  LOAD_POSTS_SUCCESS,\n  REMOVE_POST_FAILURE,\n  REMOVE_POST_REQUEST,\n  REMOVE_POST_SUCCESS,\n} from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\n\nfunction loadPostsAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* loadPosts(action) {\n  try {\n    // const result = yield call(loadPostsAPI);\n    yield delay(1000);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: generateDummyPost(10),\n    });\n  } catch (error) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction addPostAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI);\n    yield delay(1000);\n    const id = shortId.generate();\n    yield put({\n      type: ADD_POST_SUCCESS,\n      id,\n      content: action.data,\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id,\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction addCommentAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addPostAPI);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data,\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction removePostAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* removePost(action) {\n  try {\n    // const result = yield call(removePostAPI);\n    yield delay(1000);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data,\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction* watchLoadPosts() {\n  yield throttle(2000, LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* post() {\n  yield all([\n    fork(watchLoadPosts),\n    fork(watchAddPost),\n    fork(watchAddComment),\n    fork(watchRemovePost),\n  ]);\n}\n\nexport default post;\n"]},"metadata":{},"sourceType":"module"}
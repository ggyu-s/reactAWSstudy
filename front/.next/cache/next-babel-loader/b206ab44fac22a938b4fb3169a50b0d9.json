{"ast":null,"code":"import React from \"react\";\nimport { all, fork, put, takeLatest } from \"redux-saga/effects\";\nimport { LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_REQUEST, LOG_OUT_SUCCESS } from \"../reducers/user\";\n\nfunction logInAPI(data) {\n  return axios.post(\"/api/login\");\n}\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    console.log(action);\n    yield delay(2000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (error) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(2000);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* user() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}\n\nexport default user;","map":{"version":3,"sources":["/Users/ggyu/Library/Mobile Documents/com~apple~CloudDocs/My/Front/reactnodestudy/front/sagas/user.js"],"names":["React","all","fork","put","takeLatest","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","logInAPI","data","axios","post","logIn","action","console","log","delay","type","error","response","logOutAPI","logOut","result","LOG_OUT_FAILURE","watchLogIn","watchLogOut","user"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,SACEC,cADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,eAJF,EAKEC,eALF,QAMO,kBANP;;AAQA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,SAAOC,KAAK,CAACC,IAAN,CAAW,YAAX,CAAP;AACD;;AAED,UAAUC,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAI;AACF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,UAAMG,KAAK,CAAC,IAAD,CAAX;AACA,UAAMf,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEZ,cADE;AAERI,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAID,GARD,CAQE,OAAOS,KAAP,EAAc;AACd,UAAMjB,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEd,cADE;AAERM,MAAAA,IAAI,EAAES,KAAK,CAACC,QAAN,CAAeV;AAFb,KAAD,CAAT;AAID;AACF;;AAED,SAASW,SAAT,GAAqB;AACnB,SAAOV,KAAK,CAACC,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,UAAUU,MAAV,GAAmB;AACjB,MAAI;AACF;AACA,UAAML,KAAK,CAAC,IAAD,CAAX;AACA,UAAMf,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEV,eADE;AAERE,MAAAA,IAAI,EAAEa,MAAM,CAACb;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOS,KAAP,EAAc;AACd,UAAMjB,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEM,eADE;AAERd,MAAAA,IAAI,EAAES,KAAK,CAACC,QAAN,CAAeV;AAFb,KAAD,CAAT;AAID;AACF;;AAED,UAAUe,UAAV,GAAuB;AACrB,QAAMtB,UAAU,CAACE,cAAD,EAAiBQ,KAAjB,CAAhB;AACD;;AAED,UAAUa,WAAV,GAAwB;AACtB,QAAMvB,UAAU,CAACI,eAAD,EAAkBe,MAAlB,CAAhB;AACD;;AAED,UAAUK,IAAV,GAAiB;AACf,QAAM3B,GAAG,CAAC,CAACC,IAAI,CAACwB,UAAD,CAAL,EAAmBxB,IAAI,CAACyB,WAAD,CAAvB,CAAD,CAAT;AACD;;AAED,eAAeC,IAAf","sourcesContent":["import React from \"react\";\nimport { all, fork, put, takeLatest } from \"redux-saga/effects\";\nimport {\n  LOG_IN_FAILURE,\n  LOG_IN_REQUEST,\n  LOG_IN_SUCCESS,\n  LOG_OUT_REQUEST,\n  LOG_OUT_SUCCESS,\n} from \"../reducers/user\";\n\nfunction logInAPI(data) {\n  return axios.post(\"/api/login\");\n}\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    console.log(action);\n    yield delay(2000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data,\n    });\n  } catch (error) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(2000);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* user() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}\n\nexport default user;\n"]},"metadata":{},"sourceType":"module"}
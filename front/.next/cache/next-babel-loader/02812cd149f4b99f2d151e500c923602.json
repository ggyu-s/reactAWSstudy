{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(addPost),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddPost),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(post);\n\nimport React from \"react\";\nimport { all, fork, put, takeLatest } from \"redux-saga/effects\";\n\nfunction addPostAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction addPost() {\n  return _regeneratorRuntime.wrap(function addPost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return delay(2000);\n\n        case 3:\n          _context.next = 5;\n          return put({\n            type: \"ADD_POST_SUCCESS\",\n            data: result.data\n          });\n\n        case 5:\n          _context.next = 11;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 11;\n          return put({\n            type: \"ADD_POST_FAILURE\",\n            data: _context.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n}\n\nfunction watchAddPost() {\n  return _regeneratorRuntime.wrap(function watchAddPost$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(\"ADD_POST_REQUEST\", addPost);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction post() {\n  return _regeneratorRuntime.wrap(function post$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([fork(watchAddPost)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nexport default post;","map":{"version":3,"sources":["/Users/ggyu/Library/Mobile Documents/com~apple~CloudDocs/My/Front/reactnodestudy/front/sagas/post.js"],"names":["addPost","watchAddPost","post","React","all","fork","put","takeLatest","addPostAPI","axios","delay","type","data","result","response"],"mappings":";;oDAOUA,O;qDAgBAC,Y;qDAIAC,I;;AA3BV,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;;AAEA,SAASC,UAAT,GAAsB;AACpB,SAAOC,KAAK,CAACP,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,SAAUF,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGI,iBAAMU,KAAK,CAAC,IAAD,CAAX;;AAHJ;AAAA;AAII,iBAAMJ,GAAG,CAAC;AACRK,YAAAA,IAAI,EAAE,kBADE;AAERC,YAAAA,IAAI,EAAEC,MAAM,CAACD;AAFL,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AASI,iBAAMN,GAAG,CAAC;AACRK,YAAAA,IAAI,EAAE,kBADE;AAERC,YAAAA,IAAI,EAAE,YAAME,QAAN,CAAeF;AAFb,WAAD,CAAT;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAAUX,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMM,UAAU,CAAC,kBAAD,EAAqBP,OAArB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUE,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAME,GAAG,CAAC,CAACC,IAAI,CAACJ,YAAD,CAAL,CAAD,CAAT;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAeC,IAAf","sourcesContent":["import React from \"react\";\nimport { all, fork, put, takeLatest } from \"redux-saga/effects\";\n\nfunction addPostAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* addPost() {\n  try {\n    // const result = yield call(addPostAPI);\n    yield delay(2000);\n    yield put({\n      type: \"ADD_POST_SUCCESS\",\n      data: result.data,\n    });\n  } catch (error) {\n    yield put({\n      type: \"ADD_POST_FAILURE\",\n      data: error.response.data,\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(\"ADD_POST_REQUEST\", addPost);\n}\n\nfunction* post() {\n  yield all([fork(watchAddPost)]);\n}\n\nexport default post;\n"]},"metadata":{},"sourceType":"module"}
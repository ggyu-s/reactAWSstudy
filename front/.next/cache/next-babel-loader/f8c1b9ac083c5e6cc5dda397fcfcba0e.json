{"ast":null,"code":"import React from \"react\";\nimport { all, fork, put, takeLatest } from \"redux-saga/effects\";\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS } from \"../reducers/post\";\n\nfunction addPostAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI);\n    yield delay(2000);\n    yield put({\n      type: ADD_POST_SUCCESS\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction addCommentAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* addComment() {\n  try {\n    // const result = yield call(addPostAPI);\n    yield delay(2000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* post() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}\n\nexport default post;","map":{"version":3,"sources":["/Users/ggyu/Library/Mobile Documents/com~apple~CloudDocs/My/Front/reactnodestudy/front/sagas/post.js"],"names":["React","all","fork","put","takeLatest","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","addPostAPI","axios","post","addPost","action","delay","type","error","data","response","addCommentAPI","addComment","watchAddPost","watchAddComment"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,gBAJF,EAKEC,gBALF,EAMEC,gBANF,QAOO,kBAPP;;AASA,SAASC,UAAT,GAAsB;AACpB,SAAOC,KAAK,CAACC,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,UAAUC,OAAV,CAAkBC,MAAlB,EAA0B;AACxB,MAAI;AACF;AACA,UAAMC,KAAK,CAAC,IAAD,CAAX;AACA,UAAMb,GAAG,CAAC;AACRc,MAAAA,IAAI,EAAEP;AADE,KAAD,CAAT;AAGD,GAND,CAME,OAAOQ,KAAP,EAAc;AACd,UAAMf,GAAG,CAAC;AACRc,MAAAA,IAAI,EAAET,gBADE;AAERW,MAAAA,IAAI,EAAED,KAAK,CAACE,QAAN,CAAeD;AAFb,KAAD,CAAT;AAID;AACF;;AAED,SAASE,aAAT,GAAyB;AACvB,SAAOT,KAAK,CAACC,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,UAAUS,UAAV,GAAuB;AACrB,MAAI;AACF;AACA,UAAMN,KAAK,CAAC,IAAD,CAAX;AACA,UAAMb,GAAG,CAAC;AACRc,MAAAA,IAAI,EAAEV;AADE,KAAD,CAAT;AAGD,GAND,CAME,OAAOW,KAAP,EAAc;AACd,UAAMf,GAAG,CAAC;AACRc,MAAAA,IAAI,EAAEZ,mBADE;AAERc,MAAAA,IAAI,EAAED,KAAK,CAACE,QAAN,CAAeD;AAFb,KAAD,CAAT;AAID;AACF;;AAED,UAAUI,YAAV,GAAyB;AACvB,QAAMnB,UAAU,CAACK,gBAAD,EAAmBK,OAAnB,CAAhB;AACD;;AAED,UAAUU,eAAV,GAA4B;AAC1B,QAAMpB,UAAU,CAACE,mBAAD,EAAsBgB,UAAtB,CAAhB;AACD;;AAED,UAAUT,IAAV,GAAiB;AACf,QAAMZ,GAAG,CAAC,CAACC,IAAI,CAACqB,YAAD,CAAL,EAAqBrB,IAAI,CAACsB,eAAD,CAAzB,CAAD,CAAT;AACD;;AAED,eAAeX,IAAf","sourcesContent":["import React from \"react\";\nimport { all, fork, put, takeLatest } from \"redux-saga/effects\";\nimport {\n  ADD_COMMENT_FAILURE,\n  ADD_COMMENT_REQUEST,\n  ADD_COMMENT_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n} from \"../reducers/post\";\n\nfunction addPostAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI);\n    yield delay(2000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction addCommentAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* addComment() {\n  try {\n    // const result = yield call(addPostAPI);\n    yield delay(2000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* post() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}\n\nexport default post;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { Button, Form, Input } from \"antd\";\nimport Link from \"next/link\";\nimport React, { useCallback, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useInput from \"../hooks/useInput\";\nimport { LOG_IN_REQUEST } from \"../reducers/user\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ButtonWrapper = styled.div.withConfig({\n  displayName: \"LoginForm__ButtonWrapper\",\n  componentId: \"sc-1czrxoj-0\"\n})([\"margin-top:10px;\"]);\nvar FormWrapper = styled(Form).withConfig({\n  displayName: \"LoginForm__FormWrapper\",\n  componentId: \"sc-1czrxoj-1\"\n})([\"padding:10px;\"]);\n\nfunction LoginForm() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      logInLoading = _useSelector.logInLoading,\n      logInError = _useSelector.logInError;\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      email = _useInput2[0],\n      onChangeEmail = _useInput2[1];\n\n  var _useInput3 = useInput(\"\"),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      password = _useInput4[0],\n      onChangePassword = _useInput4[1];\n\n  var onSubmitForm = useCallback(function () {\n    dispatch({\n      type: LOG_IN_REQUEST,\n      data: {\n        email: email,\n        password: password\n      }\n    });\n  }, [email, password]);\n  useEffect(function () {\n    if (logInError) {\n      alert(logInError);\n    }\n  }, [logInError]);\n  return /*#__PURE__*/_jsxs(FormWrapper, {\n    onFinish: onSubmitForm,\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(\"label\", {\n        htmlFor: \"user-email\",\n        children: \"\\uC774\\uBA54\\uC77C\"\n      }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n        name: \"user-email\",\n        value: email,\n        onChange: onChangeEmail,\n        required: true,\n        type: \"email\"\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(\"label\", {\n        htmlFor: \"user-passoword\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Input, {\n        name: \"user-password\",\n        value: password,\n        onChange: onChangePassword,\n        required: true,\n        type: \"password\"\n      })]\n    }), /*#__PURE__*/_jsxs(ButtonWrapper, {\n      children: [/*#__PURE__*/_jsx(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: logInLoading,\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }), /*#__PURE__*/_jsx(Link, {\n        href: \"/signup\",\n        children: /*#__PURE__*/_jsx(\"a\", {\n          children: /*#__PURE__*/_jsx(Button, {\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          })\n        })\n      })]\n    })]\n  });\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/ggyu/Library/Mobile Documents/com~apple~CloudDocs/My/Front/reactnodestudy/front/components/LoginForm.js"],"names":["Button","Form","Input","Link","React","useCallback","useEffect","styled","useDispatch","useSelector","useInput","LOG_IN_REQUEST","ButtonWrapper","div","FormWrapper","LoginForm","dispatch","state","user","logInLoading","logInError","email","onChangeEmail","password","onChangePassword","onSubmitForm","type","data","alert"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,MAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,cAAT,QAA+B,kBAA/B;;;AAEA,IAAMC,aAAa,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,wBAAnB;AAIA,IAAMC,WAAW,GAAGP,MAAM,CAACN,IAAD,CAAT;AAAA;AAAA;AAAA,qBAAjB;;AAIA,SAASc,SAAT,GAAqB;AACnB,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AADmB,qBAEkBC,WAAW,CAAC,UAACQ,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAF7B;AAAA,MAEXC,YAFW,gBAEXA,YAFW;AAAA,MAEGC,UAFH,gBAEGA,UAFH;;AAAA,kBAGYV,QAAQ,CAAC,EAAD,CAHpB;AAAA;AAAA,MAGZW,KAHY;AAAA,MAGLC,aAHK;;AAAA,mBAIkBZ,QAAQ,CAAC,EAAD,CAJ1B;AAAA;AAAA,MAIZa,QAJY;AAAA,MAIFC,gBAJE;;AAMnB,MAAMC,YAAY,GAAGpB,WAAW,CAAC,YAAM;AACrCW,IAAAA,QAAQ,CAAC;AACPU,MAAAA,IAAI,EAAEf,cADC;AAEPgB,MAAAA,IAAI,EAAE;AACJN,QAAAA,KAAK,EAALA,KADI;AAEJE,QAAAA,QAAQ,EAARA;AAFI;AAFC,KAAD,CAAR;AAOD,GAR+B,EAQ7B,CAACF,KAAD,EAAQE,QAAR,CAR6B,CAAhC;AASAjB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIc,UAAJ,EAAgB;AACdQ,MAAAA,KAAK,CAACR,UAAD,CAAL;AACD;AACF,GAJQ,EAIN,CAACA,UAAD,CAJM,CAAT;AAMA,sBACE,MAAC,WAAD;AAAa,IAAA,QAAQ,EAAEK,YAAvB;AAAA,4BACE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA;AAAA,QADF,eAEE,cAFF,eAGE,KAAC,KAAD;AACE,QAAA,IAAI,EAAC,YADP;AAEE,QAAA,KAAK,EAAEJ,KAFT;AAGE,QAAA,QAAQ,EAAEC,aAHZ;AAIE,QAAA,QAAQ,MAJV;AAKE,QAAA,IAAI,EAAC;AALP,QAHF;AAAA,MADF,eAYE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,gBAAf;AAAA;AAAA,QADF,eAEE,cAFF,eAGE,KAAC,KAAD;AACE,QAAA,IAAI,EAAC,eADP;AAEE,QAAA,KAAK,EAAEC,QAFT;AAGE,QAAA,QAAQ,EAAEC,gBAHZ;AAIE,QAAA,QAAQ,MAJV;AAKE,QAAA,IAAI,EAAC;AALP,QAHF;AAAA,MAZF,eAuBE,MAAC,aAAD;AAAA,8BACE,KAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAyC,QAAA,OAAO,EAAEL,YAAlD;AAAA;AAAA,QADF,eAIE,KAAC,IAAD;AAAM,QAAA,IAAI,EAAC,SAAX;AAAA,+BACE;AAAA,iCACE,KAAC,MAAD;AAAA;AAAA;AADF;AADF,QAJF;AAAA,MAvBF;AAAA,IADF;AAoCD;;AAED,eAAeJ,SAAf","sourcesContent":["import { Button, Form, Input } from \"antd\";\nimport Link from \"next/link\";\nimport React, { useCallback, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport useInput from \"../hooks/useInput\";\nimport { LOG_IN_REQUEST } from \"../reducers/user\";\n\nconst ButtonWrapper = styled.div`\n  margin-top: 10px;\n`;\n\nconst FormWrapper = styled(Form)`\n  padding: 10px;\n`;\n\nfunction LoginForm() {\n  const dispatch = useDispatch();\n  const { logInLoading, logInError } = useSelector((state) => state.user);\n  const [email, onChangeEmail] = useInput(\"\");\n  const [password, onChangePassword] = useInput(\"\");\n\n  const onSubmitForm = useCallback(() => {\n    dispatch({\n      type: LOG_IN_REQUEST,\n      data: {\n        email,\n        password,\n      },\n    });\n  }, [email, password]);\n  useEffect(() => {\n    if (logInError) {\n      alert(logInError);\n    }\n  }, [logInError]);\n\n  return (\n    <FormWrapper onFinish={onSubmitForm}>\n      <div>\n        <label htmlFor=\"user-email\">이메일</label>\n        <br />\n        <Input\n          name=\"user-email\"\n          value={email}\n          onChange={onChangeEmail}\n          required\n          type=\"email\"\n        />\n      </div>\n      <div>\n        <label htmlFor=\"user-passoword\">비밀번호</label>\n        <br />\n        <Input\n          name=\"user-password\"\n          value={password}\n          onChange={onChangePassword}\n          required\n          type=\"password\"\n        />\n      </div>\n      <ButtonWrapper>\n        <Button type=\"primary\" htmlType=\"submit\" loading={logInLoading}>\n          로그인\n        </Button>\n        <Link href=\"/signup\">\n          <a>\n            <Button>회원가입</Button>\n          </a>\n        </Link>\n      </ButtonWrapper>\n    </FormWrapper>\n  );\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}
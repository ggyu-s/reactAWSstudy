{"ast":null,"code":"import { all, call, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, LIKE_POST_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LOAD_HASHTAG_POSTS_FAILURE, LOAD_HASHTAG_POSTS_REQUEST, LOAD_HASHTAG_POSTS_SUCCESS, LOAD_POSTS_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POST_FAILURE, LOAD_POST_REQUEST, LOAD_POST_SUCCESS, LOAD_USER_POSTS_FAILURE, LOAD_USER_POSTS_REQUEST, LOAD_USER_POSTS_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, RETWEET_FAILURE, RETWEET_REQUEST, RETWEET_SUCCESS, UNLIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS } from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\n\nfunction loadPostsAPI(lastId) {\n  return axios.get(`/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.lastId);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(`/post/${data}`);\n}\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data\n    });\n    console.log(result.data);\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: LOAD_POST_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction loadUserPostsAPI(data, lastId) {\n  return axios.get(`/user/${data}/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadUserPosts(action) {\n  try {\n    const result = yield call(loadUserPostsAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_USER_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: LOAD_USER_POSTS_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction loadHashtagPostsAPI(data, lastId) {\n  return axios.get(`/hashtag/${encodeURIComponent(data)}?lastId=${lastId || 0}`);\n}\n\nfunction* loadHashtagPosts(action) {\n  try {\n    const result = yield call(loadHashtagPostsAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: LIKE_POST_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction unLikePostAPI(data) {\n  return axios.delete(`/post/${data}/unlike`);\n}\n\nfunction* unLikePost(action) {\n  try {\n    const result = yield call(unLikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post(`/post/images`, data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction retweetAPI(data) {\n  return axios.post(`/post/${data}/retweet`, data);\n}\n\nfunction* retweet(action) {\n  try {\n    const result = yield call(retweetAPI, action.data);\n    console.log(result);\n    yield put({\n      type: RETWEET_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: RETWEET_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* watchLoadPosts() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchLoadUserPosts() {\n  yield takeLatest(LOAD_USER_POSTS_REQUEST, loadUserPosts);\n}\n\nfunction* watchLoadHashtagPosts() {\n  yield takeLatest(LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchLike() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnLike() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unLikePost);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* watchRetweet() {\n  yield takeLatest(RETWEET_REQUEST, retweet);\n}\n\nfunction* post() {\n  yield all([fork(watchLoadPosts), fork(watchLoadPost), fork(watchLoadUserPosts), fork(watchLoadHashtagPosts), fork(watchAddPost), fork(watchAddComment), fork(watchRemovePost), fork(watchLike), fork(watchUnLike), fork(watchUploadImages), fork(watchRetweet)]);\n}\n\nexport default post;","map":{"version":3,"sources":["/Users/ggyu/Library/Mobile Documents/com~apple~CloudDocs/My/Front/reactnodestudy/front/sagas/post.js"],"names":["all","call","fork","put","takeLatest","axios","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","LIKE_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_USER_POSTS_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","RETWEET_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","UNLIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UPLOAD_IMAGES_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loadPostsAPI","lastId","get","loadPosts","action","result","type","data","error","console","log","response","loadPostAPI","loadPost","loadUserPostsAPI","loadUserPosts","loadHashtagPostsAPI","encodeURIComponent","loadHashtagPosts","addPostAPI","post","addPost","id","addCommentAPI","postId","addComment","removePostAPI","delete","removePost","likePostAPI","patch","likePost","unLikePostAPI","unLikePost","uploadImagesAPI","uploadImages","retweetAPI","retweet","watchLoadPosts","watchLoadPost","watchLoadUserPosts","watchLoadHashtagPosts","watchAddPost","watchAddComment","watchRemovePost","watchLike","watchUnLike","watchUploadImages","watchRetweet"],"mappings":"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","sourcesContent":["import { all, call, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  ADD_COMMENT_FAILURE,\n  ADD_COMMENT_REQUEST,\n  ADD_COMMENT_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  LIKE_POST_FAILURE,\n  LIKE_POST_REQUEST,\n  LIKE_POST_SUCCESS,\n  LOAD_HASHTAG_POSTS_FAILURE,\n  LOAD_HASHTAG_POSTS_REQUEST,\n  LOAD_HASHTAG_POSTS_SUCCESS,\n  LOAD_POSTS_FAILURE,\n  LOAD_POSTS_REQUEST,\n  LOAD_POSTS_SUCCESS,\n  LOAD_POST_FAILURE,\n  LOAD_POST_REQUEST,\n  LOAD_POST_SUCCESS,\n  LOAD_USER_POSTS_FAILURE,\n  LOAD_USER_POSTS_REQUEST,\n  LOAD_USER_POSTS_SUCCESS,\n  REMOVE_POST_FAILURE,\n  REMOVE_POST_REQUEST,\n  REMOVE_POST_SUCCESS,\n  RETWEET_FAILURE,\n  RETWEET_REQUEST,\n  RETWEET_SUCCESS,\n  UNLIKE_POST_FAILURE,\n  UNLIKE_POST_REQUEST,\n  UNLIKE_POST_SUCCESS,\n  UPLOAD_IMAGES_FAILURE,\n  UPLOAD_IMAGES_REQUEST,\n  UPLOAD_IMAGES_SUCCESS,\n} from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\n\nfunction loadPostsAPI(lastId) {\n  return axios.get(`/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.lastId);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(`/post/${data}`);\n}\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data);\n    yield put({\n      type: LOAD_POST_SUCCESS,\n      data: result.data,\n    });\n    console.log(result.data);\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: LOAD_POST_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction loadUserPostsAPI(data, lastId) {\n  return axios.get(`/user/${data}/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadUserPosts(action) {\n  try {\n    const result = yield call(loadUserPostsAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_USER_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: LOAD_USER_POSTS_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction loadHashtagPostsAPI(data, lastId) {\n  return axios.get(\n    `/hashtag/${encodeURIComponent(data)}?lastId=${lastId || 0}`\n  );\n}\n\nfunction* loadHashtagPosts(action) {\n  try {\n    const result = yield call(loadHashtagPostsAPI, action.data, action.lastId);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: LOAD_HASHTAG_POSTS_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id,\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: LIKE_POST_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction unLikePostAPI(data) {\n  return axios.delete(`/post/${data}/unlike`);\n}\n\nfunction* unLikePost(action) {\n  try {\n    const result = yield call(unLikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post(`/post/images`, data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction retweetAPI(data) {\n  return axios.post(`/post/${data}/retweet`, data);\n}\n\nfunction* retweet(action) {\n  try {\n    const result = yield call(retweetAPI, action.data);\n    console.log(result);\n    yield put({\n      type: RETWEET_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: RETWEET_FAILURE,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction* watchLoadPosts() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_POST_REQUEST, loadPost);\n}\n\nfunction* watchLoadUserPosts() {\n  yield takeLatest(LOAD_USER_POSTS_REQUEST, loadUserPosts);\n}\n\nfunction* watchLoadHashtagPosts() {\n  yield takeLatest(LOAD_HASHTAG_POSTS_REQUEST, loadHashtagPosts);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchLike() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnLike() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unLikePost);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* watchRetweet() {\n  yield takeLatest(RETWEET_REQUEST, retweet);\n}\n\nfunction* post() {\n  yield all([\n    fork(watchLoadPosts),\n    fork(watchLoadPost),\n    fork(watchLoadUserPosts),\n    fork(watchLoadHashtagPosts),\n    fork(watchAddPost),\n    fork(watchAddComment),\n    fork(watchRemovePost),\n    fork(watchLike),\n    fork(watchUnLike),\n    fork(watchUploadImages),\n    fork(watchRetweet),\n  ]);\n}\n\nexport default post;\n"]},"metadata":{},"sourceType":"module"}
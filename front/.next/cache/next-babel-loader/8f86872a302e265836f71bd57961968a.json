{"ast":null,"code":"import Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport AppLayout from \"../../components/AppLayout\";\nimport PostCard from \"../../components/PostCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Post() {\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      singlePost = _useSelector.singlePost; //   if (router.isFallback) {\n  //     return <div>로딩중...</div>;\n  //   }\n\n\n  return /*#__PURE__*/_jsxs(AppLayout, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: singlePost.User.nickname\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: singlePost.content\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:title\",\n        content: \"\".concat(singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:description\",\n        content: singlePost.content\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:image\",\n        content: singlePost.Images[0] ? singlePost.Images[0].src : \"https://nodebird.com/favicon.ico\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        property: \"og:url\",\n        content: \"https://nodebird.com/post/\".concat(id)\n      })]\n    }), /*#__PURE__*/_jsx(PostCard, {\n      post: singlePost\n    })]\n  });\n} // export async function getStaticPaths() {\n//   return {\n//     paths: [{ params: { id: \"1\" } }],\n//     fallback: true,\n//   };\n// }\n\n\nexport var __N_SSP = true;\nexport default Post;","map":{"version":3,"sources":["/Users/ggyu/Library/Mobile Documents/com~apple~CloudDocs/My/Front/reactnodestudy/front/pages/post/[id].js"],"names":["Head","useRouter","React","useSelector","AppLayout","PostCard","Post","router","id","query","state","post","singlePost","User","nickname","content","Images","src"],"mappings":"AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;;;AAKA,SAASC,IAAT,GAAgB;AACd,MAAMC,MAAM,GAAGN,SAAS,EAAxB;AADc,MAENO,EAFM,GAECD,MAAM,CAACE,KAFR,CAEND,EAFM;;AAAA,qBAGSL,WAAW,CAAC,UAACO,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAHpB;AAAA,MAGNC,UAHM,gBAGNA,UAHM,EAKd;AACA;AACA;;;AAEA,sBACE,MAAC,SAAD;AAAA,4BACE,MAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,UAAU,CAACC,IAAX,CAAgBC;AAAxB,QADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,UAAU,CAACG;AAA7C,QAFF,eAGE;AACE,QAAA,QAAQ,EAAC,UADX;AAEE,QAAA,OAAO,YAAKH,UAAU,CAACC,IAAX,CAAgBC,QAArB;AAFT,QAHF,eAOE;AAAM,QAAA,QAAQ,EAAC,gBAAf;AAAgC,QAAA,OAAO,EAAEF,UAAU,CAACG;AAApD,QAPF,eAQE;AACE,QAAA,QAAQ,EAAC,UADX;AAEE,QAAA,OAAO,EACLH,UAAU,CAACI,MAAX,CAAkB,CAAlB,IACIJ,UAAU,CAACI,MAAX,CAAkB,CAAlB,EAAqBC,GADzB,GAEI;AALR,QARF,eAgBE;AAAM,QAAA,QAAQ,EAAC,QAAf;AAAwB,QAAA,OAAO,sCAA+BT,EAA/B;AAA/B,QAhBF;AAAA,MADF,eAmBE,KAAC,QAAD;AAAU,MAAA,IAAI,EAAEI;AAAhB,MAnBF;AAAA,IADF;AAuBD,C,CAED;AACA;AACA;AACA;AACA;AACA;;;;AAqBA,eAAeN,IAAf","sourcesContent":["import axios from \"axios\";\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { END } from \"redux-saga\";\nimport AppLayout from \"../../components/AppLayout\";\nimport PostCard from \"../../components/PostCard\";\nimport { LOAD_POST_REQUEST } from \"../../reducers/post\";\nimport { LOAD_MY_INFO_REQUEST } from \"../../reducers/user\";\nimport wrapper from \"../../store/configureStore\";\n\nfunction Post() {\n  const router = useRouter();\n  const { id } = router.query;\n  const { singlePost } = useSelector((state) => state.post);\n\n  //   if (router.isFallback) {\n  //     return <div>로딩중...</div>;\n  //   }\n\n  return (\n    <AppLayout>\n      <Head>\n        <title>{singlePost.User.nickname}</title>\n        <meta name=\"description\" content={singlePost.content} />\n        <meta\n          property=\"og:title\"\n          content={`${singlePost.User.nickname}님의 게시글`}\n        />\n        <meta property=\"og:description\" content={singlePost.content} />\n        <meta\n          property=\"og:image\"\n          content={\n            singlePost.Images[0]\n              ? singlePost.Images[0].src\n              : \"https://nodebird.com/favicon.ico\"\n          }\n        />\n        <meta property=\"og:url\" content={`https://nodebird.com/post/${id}`} />\n      </Head>\n      <PostCard post={singlePost} />\n    </AppLayout>\n  );\n}\n\n// export async function getStaticPaths() {\n//   return {\n//     paths: [{ params: { id: \"1\" } }],\n//     fallback: true,\n//   };\n// }\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n  async (context) => {\n    const cookie = context.req ? context.req.headers.cookie : \"\";\n    axios.defaults.headers.Cookie = \"\";\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n    });\n    context.store.dispatch({\n      type: LOAD_POST_REQUEST,\n      data: context.params.id,\n    });\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}
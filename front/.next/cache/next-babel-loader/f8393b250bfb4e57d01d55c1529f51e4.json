{"ast":null,"code":"import { all, call, delay, fork, put, takeLatest, throttle } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport shortId from \"shortid\";\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, LOAD_POSTS_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS } from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\n\nfunction loadPostsAPI(data) {\n  return axios.get(\"/posts\");\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.data);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", {\n    content: data\n  });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction removePostAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* removePost(action) {\n  try {\n    // const result = yield call(removePostAPI);\n    yield delay(1000);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction* watchLoadPosts() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* post() {\n  yield all([fork(watchLoadPosts), fork(watchAddPost), fork(watchAddComment), fork(watchRemovePost)]);\n}\n\nexport default post;","map":{"version":3,"sources":["/Users/ggyu/Library/Mobile Documents/com~apple~CloudDocs/My/Front/reactnodestudy/front/sagas/post.js"],"names":["all","call","delay","fork","put","takeLatest","throttle","axios","shortId","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loadPostsAPI","data","get","loadPosts","action","result","type","error","response","addPostAPI","post","content","addPost","id","addCommentAPI","postId","addComment","removePostAPI","removePost","console","watchLoadPosts","watchAddPost","watchAddComment","watchRemovePost"],"mappings":"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","sourcesContent":["import {\n  all,\n  call,\n  delay,\n  fork,\n  put,\n  takeLatest,\n  throttle,\n} from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport shortId from \"shortid\";\nimport {\n  ADD_COMMENT_FAILURE,\n  ADD_COMMENT_REQUEST,\n  ADD_COMMENT_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  LOAD_POSTS_FAILURE,\n  LOAD_POSTS_REQUEST,\n  LOAD_POSTS_SUCCESS,\n  REMOVE_POST_FAILURE,\n  REMOVE_POST_REQUEST,\n  REMOVE_POST_SUCCESS,\n} from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\n\nfunction loadPostsAPI(data) {\n  return axios.get(\"/posts\");\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.data);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", { content: data });\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id,\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction removePostAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* removePost(action) {\n  try {\n    // const result = yield call(removePostAPI);\n    yield delay(1000);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data,\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction* watchLoadPosts() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* post() {\n  yield all([\n    fork(watchLoadPosts),\n    fork(watchAddPost),\n    fork(watchAddComment),\n    fork(watchRemovePost),\n  ]);\n}\n\nexport default post;\n"]},"metadata":{},"sourceType":"module"}
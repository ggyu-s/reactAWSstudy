{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/ggyu/Library/Mobile Documents/com~apple~CloudDocs/My/Front/reactnodestudy/front/components/CommentForm.js\",\n    _s = $RefreshSig$();\n\nimport { Form } from \"antd\";\nimport React, { useCallback } from \"react\";\nimport useInput from \"../hooks/useInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1];\n\n  var onSubmitComment = useCallback(function () {}, [commentText]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: \"\\uD3FC\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n}\n\n_s(CommentForm, \"zY36UX01FvwcFQZaTMZwANtp89M=\", false, function () {\n  return [useInput];\n});\n\n_c = CommentForm;\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/Users/ggyu/Library/Mobile Documents/com~apple~CloudDocs/My/Front/reactnodestudy/front/components/CommentForm.js"],"names":["Form","React","useCallback","useInput","CommentForm","post","commentText","onChangeCommentText","onSubmitComment"],"mappings":";;;;;AAAA,SAASA,IAAT,QAAqB,MAArB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AAEA,SAASC,WAAT,OAA+B;AAAA;;AAAA,MAARC,IAAQ,QAARA,IAAQ;;AAAA,kBACcF,QAAQ,CAAC,EAAD,CADtB;AAAA;AAAA,MACtBG,WADsB;AAAA,MACTC,mBADS;;AAE7B,MAAMC,eAAe,GAAGN,WAAW,CAAC,YAAM,CAAE,CAAT,EAAW,CAACI,WAAD,CAAX,CAAnC;AAEA,sBAAO,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GALQJ,W;UACoCD,Q;;;KADpCC,W;AAOT,eAAeA,WAAf","sourcesContent":["import { Form } from \"antd\";\nimport React, { useCallback } from \"react\";\nimport useInput from \"../hooks/useInput\";\n\nfunction CommentForm({ post }) {\n  const [commentText, onChangeCommentText] = useInput(\"\");\n  const onSubmitComment = useCallback(() => {}, [commentText]);\n\n  return <Form onFinish={onSubmitComment}>폼</Form>;\n}\n\nexport default CommentForm;\n"]},"metadata":{},"sourceType":"module"}
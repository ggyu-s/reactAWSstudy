{"ast":null,"code":"import React from \"react\";\nimport { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport { LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS } from \"../reducers/user\";\n\nfunction logInAPI(data) {\n  return axios.post(\"/api/login\");\n}\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (error) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (error) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction* signUp() {\n  try {\n    // const result = yield call(signUpAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      data: action.data\n    });\n  } catch (error) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* user() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}\n\nexport default user;","map":{"version":3,"sources":["/Users/ggyu/Library/Mobile Documents/com~apple~CloudDocs/My/Front/reactnodestudy/front/sagas/user.js"],"names":["React","all","call","delay","fork","put","takeLatest","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","logInAPI","data","axios","post","logIn","action","type","error","response","logOutAPI","logOut","LOG_OUT_FAILURE","signUp","watchLogIn","watchLogOut","watchSignUp","user"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,GAAjC,EAAsCC,UAAtC,QAAwD,oBAAxD;AACA,SACEC,cADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,eAJF,EAKEC,eALF,EAMEC,eANF,EAOEC,eAPF,EAQEC,eARF,QASO,kBATP;;AAWA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,SAAOC,KAAK,CAACC,IAAN,CAAW,YAAX,CAAP;AACD;;AAED,UAAUC,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAI;AACF;AACA,UAAMjB,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEZ,cADE;AAERO,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOM,KAAP,EAAc;AACd,UAAMjB,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEd,cADE;AAERS,MAAAA,IAAI,EAAEM,KAAK,CAACC,QAAN,CAAeP;AAFb,KAAD,CAAT;AAID;AACF;;AAED,SAASQ,SAAT,GAAqB;AACnB,SAAOP,KAAK,CAACC,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,UAAUO,MAAV,GAAmB;AACjB,MAAI;AACF;AACA,UAAMtB,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEV;AADE,KAAD,CAAT;AAGD,GAND,CAME,OAAOW,KAAP,EAAc;AACd,UAAMjB,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEK,eADE;AAERV,MAAAA,IAAI,EAAEM,KAAK,CAACC,QAAN,CAAeP;AAFb,KAAD,CAAT;AAID;AACF;;AAED,UAAUW,MAAV,GAAmB;AACjB,MAAI;AACF;AACA,UAAMxB,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEP,eADE;AAERE,MAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOM,KAAP,EAAc;AACd,UAAMjB,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAET,eADE;AAERU,MAAAA,KAAK,EAAEA,KAAK,CAACC,QAAN,CAAeP;AAFd,KAAD,CAAT;AAID;AACF;;AAED,UAAUY,UAAV,GAAuB;AACrB,QAAMtB,UAAU,CAACE,cAAD,EAAiBW,KAAjB,CAAhB;AACD;;AAED,UAAUU,WAAV,GAAwB;AACtB,QAAMvB,UAAU,CAACI,eAAD,EAAkBe,MAAlB,CAAhB;AACD;;AAED,UAAUK,WAAV,GAAwB;AACtB,QAAMxB,UAAU,CAACO,eAAD,EAAkBc,MAAlB,CAAhB;AACD;;AAED,UAAUI,IAAV,GAAiB;AACf,QAAM9B,GAAG,CAAC,CAACG,IAAI,CAACwB,UAAD,CAAL,EAAmBxB,IAAI,CAACyB,WAAD,CAAvB,EAAsCzB,IAAI,CAAC0B,WAAD,CAA1C,CAAD,CAAT;AACD;;AAED,eAAeC,IAAf","sourcesContent":["import React from \"react\";\nimport { all, call, delay, fork, put, takeLatest } from \"redux-saga/effects\";\nimport {\n  LOG_IN_FAILURE,\n  LOG_IN_REQUEST,\n  LOG_IN_SUCCESS,\n  LOG_OUT_REQUEST,\n  LOG_OUT_SUCCESS,\n  SIGN_UP_FAILURE,\n  SIGN_UP_REQUEST,\n  SIGN_UP_SUCCESS,\n} from \"../reducers/user\";\n\nfunction logInAPI(data) {\n  return axios.post(\"/api/login\");\n}\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data,\n    });\n  } catch (error) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/api/logout\");\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI);\n    yield delay(1000);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n    });\n  } catch (error) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction* signUp() {\n  try {\n    // const result = yield call(signUpAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n      data: action.data,\n    });\n  } catch (error) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* user() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}\n\nexport default user;\n"]},"metadata":{},"sourceType":"module"}
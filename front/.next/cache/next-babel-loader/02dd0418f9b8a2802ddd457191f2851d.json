{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/ggyu/Library/Mobile Documents/com~apple~CloudDocs/My/Front/reactnodestudy/front/components/PostForm.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Form, Input } from \"antd\";\nimport React, { useCallback, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useInput from \"../hooks/useInput\";\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST } from \"../reducers/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostForm() {\n  _s();\n\n  var _this = this;\n\n  var imageInput = useRef();\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      addPostDone = _useSelector.addPostDone,\n      addPostLoading = _useSelector.addPostLoading;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector2.imagePaths;\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  useEffect(function () {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n  var onSubmit = useCallback(function () {\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: text\n    });\n  }, [text]);\n  var onClickImageUpload = useCallback(function (e) {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onChangeImage = useCallback(function (e) {\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append(\"image\", f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  var onRemoveImage = useCallback(function (index) {\n    return function () {\n      dispatch({\n        type: REMOVE_IMAGE,\n        data: index\n      });\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      margin: \"10px 0 20px\"\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n      value: text,\n      onChange: onChangeText,\n      maxLength: 140,\n      placeholder: \"\\uD3EC\\uC2A4\\uD2B8 \\uC785\\uB825\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        multiple: true,\n        hidden: true,\n        ref: imageInput,\n        onChange: onChangeImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClickImageUpload,\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        style: {\n          \"float\": \"right\"\n        },\n        htmlType: \"submit\",\n        loading: addPostLoading,\n        children: \"\\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imagePaths.map(function (v, i) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"inline-block\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"http://localhost:3065/\".concat(v),\n            style: {\n              width: \"200px\"\n            },\n            alt: v\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: onRemoveImage(i),\n              children: \"\\uC81C\\uAC70\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, _this)]\n        }, v, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostForm, \"BwkKGvGybCdmBmY+lu2p20TvONA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useInput];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/Users/ggyu/Library/Mobile Documents/com~apple~CloudDocs/My/Front/reactnodestudy/front/components/PostForm.js"],"names":["Button","Form","Input","React","useCallback","useEffect","useRef","useDispatch","useSelector","useInput","ADD_POST_REQUEST","UPLOAD_IMAGES_REQUEST","PostForm","imageInput","dispatch","state","post","addPostDone","addPostLoading","imagePaths","text","onChangeText","setText","onSubmit","type","data","onClickImageUpload","e","current","click","onChangeImage","imageFormData","FormData","forEach","call","target","files","f","append","onRemoveImage","index","REMOVE_IMAGE","margin","map","v","i","display","width"],"mappings":"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","sourcesContent":["import { Button, Form, Input } from \"antd\";\nimport React, { useCallback, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useInput from \"../hooks/useInput\";\nimport { ADD_POST_REQUEST, UPLOAD_IMAGES_REQUEST } from \"../reducers/post\";\n\nfunction PostForm() {\n  const imageInput = useRef();\n  const dispatch = useDispatch();\n  const { addPostDone, addPostLoading } = useSelector((state) => state.post);\n  const { imagePaths } = useSelector((state) => state.post);\n  const [text, onChangeText, setText] = useInput(\"\");\n\n  useEffect(() => {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n\n  const onSubmit = useCallback(() => {\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: text,\n    });\n  }, [text]);\n\n  const onClickImageUpload = useCallback(\n    (e) => {\n      imageInput.current.click();\n    },\n    [imageInput.current]\n  );\n\n  const onChangeImage = useCallback((e) => {\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, (f) => {\n      imageFormData.append(\"image\", f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData,\n    });\n  }, []);\n  const onRemoveImage = useCallback(\n    (index) => () => {\n      dispatch({\n        type: REMOVE_IMAGE,\n        data: index,\n      });\n    },\n    []\n  );\n\n  return (\n    <Form\n      style={{ margin: \"10px 0 20px\" }}\n      encType=\"multipart/form-data\"\n      onFinish={onSubmit}\n    >\n      <Input.TextArea\n        value={text}\n        onChange={onChangeText}\n        maxLength={140}\n        placeholder=\"포스트 입력\"\n      />\n      <div>\n        <input\n          type=\"file\"\n          name=\"image\"\n          multiple\n          hidden\n          ref={imageInput}\n          onChange={onChangeImage}\n        />\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n        <Button\n          type=\"primary\"\n          style={{ float: \"right\" }}\n          htmlType=\"submit\"\n          loading={addPostLoading}\n        >\n          등록\n        </Button>\n      </div>\n      <div>\n        {imagePaths.map((v, i) => (\n          <div key={v} style={{ display: \"inline-block\" }}>\n            <img\n              src={`http://localhost:3065/${v}`}\n              style={{ width: \"200px\" }}\n              alt={v}\n            />\n            <div>\n              <Button onClick={onRemoveImage(i)}>제거</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </Form>\n  );\n}\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}
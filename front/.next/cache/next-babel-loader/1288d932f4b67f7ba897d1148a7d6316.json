{"ast":null,"code":"import { all, call, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { ADD_COMMENT_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_POST_SUCCESS, LIKE_POST_FAILURE, LIKE_POST_REQUEST, LIKE_POST_SUCCESS, LOAD_POSTS_FAILURE, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, REMOVE_POST_FAILURE, REMOVE_POST_REQUEST, REMOVE_POST_SUCCESS, RETWEET_FAILURE, RETWEET_REQUEST, RETWEET_SUCCESS, UNLIKE_POST_FAILURE, UNLIKE_POST_REQUEST, UNLIKE_POST_SUCCESS, UPLOAD_IMAGES_FAILURE, UPLOAD_IMAGES_REQUEST, UPLOAD_IMAGES_SUCCESS } from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\n\nfunction loadPostsAPI(lastId) {\n  return axios.get(`/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.lastId);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: LIKE_POST_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction unLikePostAPI(data) {\n  return axios.delete(`/post/${data}/unlike`);\n}\n\nfunction* unLikePost(action) {\n  try {\n    const result = yield call(unLikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post(`/post/images`, data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      data: error.response.data\n    });\n  }\n}\n\nfunction retweetAPI(data) {\n  return axios.post(`/post/${data}/retweet`, data);\n}\n\nfunction* retweet(action) {\n  try {\n    const result = yield call(retweetAPI, action.data);\n    console.log(result);\n    yield put({\n      type: RETWEET_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: RETWEET_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* watchLoadPosts() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchLike() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnLike() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unLikePost);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* watchRetweet() {\n  yield takeLatest(RETWEET_REQUEST, retweet);\n}\n\nfunction* post() {\n  yield all([fork(watchLoadPosts), fork(watchAddPost), fork(watchAddComment), fork(watchRemovePost), fork(watchLike), fork(watchUnLike), fork(watchUploadImages), fork(watchRetweet)]);\n}\n\nexport default post;","map":{"version":3,"sources":["/Users/ggyu/Library/Mobile Documents/com~apple~CloudDocs/My/Front/reactnodestudy/front/sagas/post.js"],"names":["all","call","fork","put","takeLatest","axios","ADD_COMMENT_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","LIKE_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","REMOVE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","RETWEET_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","UNLIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UPLOAD_IMAGES_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loadPostsAPI","lastId","get","loadPosts","action","result","type","data","error","console","log","response","addPostAPI","post","addPost","id","addCommentAPI","postId","addComment","removePostAPI","delete","removePost","likePostAPI","patch","likePost","unLikePostAPI","unLikePost","uploadImagesAPI","uploadImages","retweetAPI","retweet","watchLoadPosts","watchAddPost","watchAddComment","watchRemovePost","watchLike","watchUnLike","watchUploadImages","watchRetweet"],"mappings":"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","sourcesContent":["import { all, call, fork, put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport {\n  ADD_COMMENT_FAILURE,\n  ADD_COMMENT_REQUEST,\n  ADD_COMMENT_SUCCESS,\n  ADD_POST_FAILURE,\n  ADD_POST_REQUEST,\n  ADD_POST_SUCCESS,\n  LIKE_POST_FAILURE,\n  LIKE_POST_REQUEST,\n  LIKE_POST_SUCCESS,\n  LOAD_POSTS_FAILURE,\n  LOAD_POSTS_REQUEST,\n  LOAD_POSTS_SUCCESS,\n  REMOVE_POST_FAILURE,\n  REMOVE_POST_REQUEST,\n  REMOVE_POST_SUCCESS,\n  RETWEET_FAILURE,\n  RETWEET_REQUEST,\n  RETWEET_SUCCESS,\n  UNLIKE_POST_FAILURE,\n  UNLIKE_POST_REQUEST,\n  UNLIKE_POST_SUCCESS,\n  UPLOAD_IMAGES_FAILURE,\n  UPLOAD_IMAGES_REQUEST,\n  UPLOAD_IMAGES_SUCCESS,\n} from \"../reducers/post\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from \"../reducers/user\";\n\nfunction loadPostsAPI(lastId) {\n  return axios.get(`/posts?lastId=${lastId || 0}`);\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.lastId);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction addPostAPI(data) {\n  return axios.post(\"/post\", data);\n}\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id,\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\n\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction removePostAPI(data) {\n  return axios.delete(`/post/${data}`);\n}\n\nfunction* removePost(action) {\n  try {\n    const result = yield call(removePostAPI, action.data);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: result.data,\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction likePostAPI(data) {\n  return axios.patch(`/post/${data}/like`);\n}\n\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: LIKE_POST_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction unLikePostAPI(data) {\n  return axios.delete(`/post/${data}/unlike`);\n}\n\nfunction* unLikePost(action) {\n  try {\n    const result = yield call(unLikePostAPI, action.data);\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction uploadImagesAPI(data) {\n  return axios.post(`/post/images`, data);\n}\n\nfunction* uploadImages(action) {\n  try {\n    const result = yield call(uploadImagesAPI, action.data);\n    yield put({\n      type: UPLOAD_IMAGES_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: UPLOAD_IMAGES_FAILURE,\n      data: error.response.data,\n    });\n  }\n}\n\nfunction retweetAPI(data) {\n  return axios.post(`/post/${data}/retweet`, data);\n}\n\nfunction* retweet(action) {\n  try {\n    const result = yield call(retweetAPI, action.data);\n    console.log(result);\n    yield put({\n      type: RETWEET_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: RETWEET_FAILURE,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction* watchLoadPosts() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPosts);\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\n\nfunction* watchLike() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\n\nfunction* watchUnLike() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unLikePost);\n}\n\nfunction* watchUploadImages() {\n  yield takeLatest(UPLOAD_IMAGES_REQUEST, uploadImages);\n}\n\nfunction* watchRetweet() {\n  yield takeLatest(RETWEET_REQUEST, retweet);\n}\n\nfunction* post() {\n  yield all([\n    fork(watchLoadPosts),\n    fork(watchAddPost),\n    fork(watchAddComment),\n    fork(watchRemovePost),\n    fork(watchLike),\n    fork(watchUnLike),\n    fork(watchUploadImages),\n    fork(watchRetweet),\n  ]);\n}\n\nexport default post;\n"]},"metadata":{},"sourceType":"module"}
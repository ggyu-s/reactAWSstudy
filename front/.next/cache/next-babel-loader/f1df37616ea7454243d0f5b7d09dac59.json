{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport Head from \"next/head\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Avatar, Card } from \"antd\";\nimport { useRouter } from \"next/router\";\nimport AppLayout from \"../../components/AppLayout\";\nimport PostCard from \"../../components/PostCard\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../../reducers/post\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction User() {\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var id = router.query.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePosts = _useSelector.hasMorePosts,\n      loadPostsLoading = _useSelector.loadPostsLoading;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      userInfo = _useSelector2.userInfo;\n\n  useEffect(function () {\n    function onScroll() {\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePosts && !loadPostsLoading) {\n          console.log(hasMorePosts, loadPostsLoading);\n          dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n            data: id\n          });\n        }\n      }\n    }\n\n    window.addEventListener(\"scroll\", onScroll);\n    return function () {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePosts, mainPosts.length, id, loadPostsLoading]);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsxs(AppLayout, {\n      children: [userInfo ? /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(Head, {\n          children: [/*#__PURE__*/_jsxs(\"title\", {\n            children: [userInfo.nickname, \"\\uB2D8\\uC758 \\uAE00\"]\n          }), /*#__PURE__*/_jsx(\"meta\", {\n            name: \"description\",\n            content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n          }), /*#__PURE__*/_jsx(\"meta\", {\n            property: \"og:title\",\n            content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n          }), /*#__PURE__*/_jsx(\"meta\", {\n            property: \"og:description\",\n            content: \"\".concat(userInfo.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n          }), /*#__PURE__*/_jsx(\"meta\", {\n            property: \"og:image\",\n            content: \"https://nodebird.com/favicon.ico\"\n          }), /*#__PURE__*/_jsx(\"meta\", {\n            property: \"og:url\",\n            content: \"https://nodebird.com/user/\".concat(id)\n          })]\n        }), /*#__PURE__*/_jsx(Card, {\n          actions: [/*#__PURE__*/_jsxs(\"div\", {\n            children: [\"\\uD2B8\\uC717\", /*#__PURE__*/_jsx(\"br\", {}), userInfo.Posts.length]\n          }, \"twit\"), /*#__PURE__*/_jsxs(\"div\", {\n            children: [\"\\uD314\\uB85C\\uC789\", /*#__PURE__*/_jsx(\"br\", {}), userInfo.Followings.length]\n          }, \"followings\"), /*#__PURE__*/_jsxs(\"div\", {\n            children: [\"\\uD314\\uB85C\\uC6CC\", /*#__PURE__*/_jsx(\"br\", {}), \" \", userInfo.Followers.length]\n          }, \"followings\")],\n          children: /*#__PURE__*/_jsx(Card.Meta, {\n            avatar: /*#__PURE__*/_jsx(Avatar, {\n              children: userInfo.nickname[0]\n            }),\n            title: userInfo.nickname\n          })\n        })]\n      }) : null, mainPosts.map(function (c) {\n        return /*#__PURE__*/_jsx(PostCard, {\n          post: c\n        }, c.id);\n      })]\n    })\n  });\n}\n\nexport var __N_SSP = true;\nexport default User;","map":{"version":3,"sources":["/Users/ggyu/Library/Mobile Documents/com~apple~CloudDocs/My/Front/reactnodestudy/front/pages/user/[id].js"],"names":["React","useEffect","Head","useDispatch","useSelector","Avatar","Card","useRouter","AppLayout","PostCard","LOAD_USER_POSTS_REQUEST","User","dispatch","router","id","query","state","post","mainPosts","hasMorePosts","loadPostsLoading","user","userInfo","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","console","log","type","lastId","length","data","addEventListener","removeEventListener","nickname","Posts","Followings","Followers","map","c"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAGA,OAAOC,SAAP,MAAsB,4BAAtB;AAGA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,uBAAT,QAAwC,qBAAxC;;;;;AAEA,SAASC,IAAT,GAAgB;AACd,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,MAAMU,MAAM,GAAGN,SAAS,EAAxB;AAFc,MAGNO,EAHM,GAGCD,MAAM,CAACE,KAHR,CAGND,EAHM;;AAAA,qBAIwCV,WAAW,CAC/D,UAACY,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAD+D,CAJnD;AAAA,MAINC,SAJM,gBAINA,SAJM;AAAA,MAIKC,YAJL,gBAIKA,YAJL;AAAA,MAImBC,gBAJnB,gBAImBA,gBAJnB;;AAAA,sBAOOhB,WAAW,CAAC,UAACY,KAAD;AAAA,WAAWA,KAAK,CAACK,IAAjB;AAAA,GAAD,CAPlB;AAAA,MAONC,QAPM,iBAONA,QAPM;;AASdrB,EAAAA,SAAS,CAAC,YAAM;AACd,aAASsB,QAAT,GAAoB;AAClB,UACEC,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GACAF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAF1C,EAGE;AACA,YAAIV,YAAY,IAAI,CAACC,gBAArB,EAAuC;AACrCU,UAAAA,OAAO,CAACC,GAAR,CAAYZ,YAAZ,EAA0BC,gBAA1B;AACAR,UAAAA,QAAQ,CAAC;AACPoB,YAAAA,IAAI,EAAEtB,uBADC;AAEPuB,YAAAA,MAAM,EACJf,SAAS,CAACA,SAAS,CAACgB,MAAV,GAAmB,CAApB,CAAT,IACAhB,SAAS,CAACA,SAAS,CAACgB,MAAV,GAAmB,CAApB,CAAT,CAAgCpB,EAJ3B;AAKPqB,YAAAA,IAAI,EAAErB;AALC,WAAD,CAAR;AAOD;AACF;AACF;;AACDU,IAAAA,MAAM,CAACY,gBAAP,CAAwB,QAAxB,EAAkCb,QAAlC;AACA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACa,mBAAP,CAA2B,QAA3B,EAAqCd,QAArC;AACD,KAFD;AAGD,GAtBQ,EAsBN,CAACJ,YAAD,EAAeD,SAAS,CAACgB,MAAzB,EAAiCpB,EAAjC,EAAqCM,gBAArC,CAtBM,CAAT;AAwBA,sBACE;AAAA,2BACE,MAAC,SAAD;AAAA,iBACGE,QAAQ,gBACP;AAAA,gCACE,MAAC,IAAD;AAAA,kCACE;AAAA,uBAAQA,QAAQ,CAACgB,QAAjB;AAAA,YADF,eAEE;AACE,YAAA,IAAI,EAAC,aADP;AAEE,YAAA,OAAO,YAAKhB,QAAQ,CAACgB,QAAd;AAFT,YAFF,eAME;AACE,YAAA,QAAQ,EAAC,UADX;AAEE,YAAA,OAAO,YAAKhB,QAAQ,CAACgB,QAAd;AAFT,YANF,eAUE;AACE,YAAA,QAAQ,EAAC,gBADX;AAEE,YAAA,OAAO,YAAKhB,QAAQ,CAACgB,QAAd;AAFT,YAVF,eAcE;AACE,YAAA,QAAQ,EAAC,UADX;AAEE,YAAA,OAAO,EAAC;AAFV,YAdF,eAkBE;AACE,YAAA,QAAQ,EAAC,QADX;AAEE,YAAA,OAAO,sCAA+BxB,EAA/B;AAFT,YAlBF;AAAA,UADF,eAwBE,KAAC,IAAD;AACE,UAAA,OAAO,EAAE,cACP;AAAA,oDAEE,cAFF,EAGGQ,QAAQ,CAACiB,KAAT,CAAeL,MAHlB;AAAA,aAAS,MAAT,CADO,eAMP;AAAA,0DAEE,cAFF,EAGGZ,QAAQ,CAACkB,UAAT,CAAoBN,MAHvB;AAAA,aAAS,YAAT,CANO,eAWP;AAAA,0DAEE,cAFF,OAEUZ,QAAQ,CAACmB,SAAT,CAAmBP,MAF7B;AAAA,aAAS,YAAT,CAXO,CADX;AAAA,iCAkBE,KAAC,IAAD,CAAM,IAAN;AACE,YAAA,MAAM,eAAE,KAAC,MAAD;AAAA,wBAASZ,QAAQ,CAACgB,QAAT,CAAkB,CAAlB;AAAT,cADV;AAEE,YAAA,KAAK,EAAEhB,QAAQ,CAACgB;AAFlB;AAlBF,UAxBF;AAAA,QADO,GAiDL,IAlDN,EAmDGpB,SAAS,CAACwB,GAAV,CAAc,UAACC,CAAD;AAAA,4BACb,KAAC,QAAD;AAAqB,UAAA,IAAI,EAAEA;AAA3B,WAAeA,CAAC,CAAC7B,EAAjB,CADa;AAAA,OAAd,CAnDH;AAAA;AADF,IADF;AA2DD;;;AAyBD,eAAeH,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport Head from \"next/head\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Avatar, Card } from \"antd\";\nimport { END } from \"redux-saga\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\n\nimport AppLayout from \"../../components/AppLayout\";\nimport wrapper from \"../../store/configureStore\";\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from \"../../reducers/user\";\nimport PostCard from \"../../components/PostCard\";\nimport { LOAD_USER_POSTS_REQUEST } from \"../../reducers/post\";\n\nfunction User() {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const { id } = router.query;\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector(\n    (state) => state.post\n  );\n  const { userInfo } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    function onScroll() {\n      if (\n        window.scrollY + document.documentElement.clientHeight >\n        document.documentElement.scrollHeight - 300\n      ) {\n        if (hasMorePosts && !loadPostsLoading) {\n          console.log(hasMorePosts, loadPostsLoading);\n          dispatch({\n            type: LOAD_USER_POSTS_REQUEST,\n            lastId:\n              mainPosts[mainPosts.length - 1] &&\n              mainPosts[mainPosts.length - 1].id,\n            data: id,\n          });\n        }\n      }\n    }\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePosts, mainPosts.length, id, loadPostsLoading]);\n\n  return (\n    <>\n      <AppLayout>\n        {userInfo ? (\n          <>\n            <Head>\n              <title>{userInfo.nickname}님의 글</title>\n              <meta\n                name=\"description\"\n                content={`${userInfo.nickname}님의 게시글`}\n              />\n              <meta\n                property=\"og:title\"\n                content={`${userInfo.nickname}님의 게시글`}\n              />\n              <meta\n                property=\"og:description\"\n                content={`${userInfo.nickname}님의 게시글`}\n              />\n              <meta\n                property=\"og:image\"\n                content=\"https://nodebird.com/favicon.ico\"\n              />\n              <meta\n                property=\"og:url\"\n                content={`https://nodebird.com/user/${id}`}\n              />\n            </Head>\n            <Card\n              actions={[\n                <div key=\"twit\">\n                  트윗\n                  <br />\n                  {userInfo.Posts.length}\n                </div>,\n                <div key=\"followings\">\n                  팔로잉\n                  <br />\n                  {userInfo.Followings.length}\n                </div>,\n                <div key=\"followings\">\n                  팔로워\n                  <br /> {userInfo.Followers.length}\n                </div>,\n              ]}\n            >\n              <Card.Meta\n                avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\n                title={userInfo.nickname}\n              />\n            </Card>\n          </>\n        ) : null}\n        {mainPosts.map((c) => (\n          <PostCard key={c.id} post={c} />\n        ))}\n      </AppLayout>\n    </>\n  );\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n  async (context) => {\n    const cookie = context.req ? context.req.headers.cookie : \"\";\n    axios.defaults.headers.Cookie = \"\";\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({\n      type: LOAD_USER_POSTS_REQUEST,\n      data: context.params.id,\n    });\n    context.store.dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n    });\n    context.store.dispatch({\n      type: LOAD_USER_REQUEST,\n      data: context.params.id,\n    });\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}
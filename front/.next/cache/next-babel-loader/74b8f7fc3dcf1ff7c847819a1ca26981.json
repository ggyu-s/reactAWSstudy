{"ast":null,"code":"var _jsxFileName = \"/Users/ggyu/Library/Mobile Documents/com~apple~CloudDocs/My/Front/reactnodestudy/front/components/PostCard.js\",\n    _s = $RefreshSig$();\n\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined, HeartTwoTone } from \"@ant-design/icons\";\nimport { Avatar, Button, Card, Comment, List, Popover } from \"antd\";\nimport ButtonGroup from \"antd/lib/button/button-group\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport PostImages from \"./PostImages\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./PostCardContent\";\nimport { LIKE_POST_REQUEST, REMOVE_POST_REQUEST, RETWEET_REQUEST, UNLIKE_POST_REQUEST } from \"../reducers/post\";\nimport FollowButton from \"./FollowButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PostCard(_ref) {\n  _s();\n\n  var _this = this;\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      removePostLoading = _useSelector.removePostLoading,\n      retweetError = _useSelector.retweetError;\n\n  var _useState = useState(false),\n      commentFormOpened = _useState[0],\n      setCommentFormOpened = _useState[1];\n\n  var liked = post.Likers.find(function (v) {\n    return v.id === id;\n  }); // useEffect(() => {\n  //   if (retweetError) {\n  //     alert(retweetError);\n  //   }\n  // }, [retweetError]);\n\n  var onLike = useCallback(function () {\n    dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  var onUnLike = useCallback(function () {\n    dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onRemovePost = useCallback(function () {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  var onRetweet = useCallback(function () {\n    if (!id) {\n      return alert(\"로그인이 필요합니다.\");\n    }\n\n    return dispatch({\n      type: RETWEET_REQUEST,\n      data: post.id\n    });\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 34\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {\n        onClick: onRetweet\n      }, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onUnLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              onClick: onRemovePost,\n              loading: removePostLoading,\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)],\n      title: post.RetweetId ? \"\".concat(post.User.nickname, \"\\uB2D8\\uC774 \\uB9AC\\uD2B8\\uC717\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4.\") : null,\n      extra: id && /*#__PURE__*/_jsxDEV(FollowButton, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 22\n      }, this),\n      children: post.RetweetId && post.Retweet ? /*#__PURE__*/_jsxDEV(Card, {\n        cover: post.Retweet.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n          images: post.Retweet.Images\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n          avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n            children: post.Retweet.User.nickname[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 23\n          }, this),\n          title: post.Retweet.User.nickname,\n          description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n            postData: post.Retweet.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 26\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.User.nickname,\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: item.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 27\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostCard, \"7U99KNmQqj6/GPxLSiGWyenI+Dc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Likers: PropTypes.arrayOf(PropTypes.object),\n    RetweetId: PropTypes.number,\n    Retweet: PropTypes.objectOf(PropTypes.any)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["/Users/ggyu/Library/Mobile Documents/com~apple~CloudDocs/My/Front/reactnodestudy/front/components/PostCard.js"],"names":["EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","HeartTwoTone","Avatar","Button","Card","Comment","List","Popover","ButtonGroup","React","useCallback","useEffect","useState","useDispatch","useSelector","PropTypes","PostImages","CommentForm","PostCardContent","LIKE_POST_REQUEST","REMOVE_POST_REQUEST","RETWEET_REQUEST","UNLIKE_POST_REQUEST","FollowButton","PostCard","post","dispatch","id","state","user","me","removePostLoading","retweetError","commentFormOpened","setCommentFormOpened","liked","Likers","find","v","onLike","type","data","onUnLike","onToggleComment","prev","onRemovePost","onRetweet","alert","marginBottom","Images","User","RetweetId","nickname","Retweet","content","Comments","length","item","propTypes","shape","number","object","string","createAt","arrayOf","objectOf","any","isRequired"],"mappings":"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","sourcesContent":["import {\n  EllipsisOutlined,\n  HeartOutlined,\n  MessageOutlined,\n  RetweetOutlined,\n  HeartTwoTone,\n} from \"@ant-design/icons\";\nimport { Avatar, Button, Card, Comment, List, Popover } from \"antd\";\nimport ButtonGroup from \"antd/lib/button/button-group\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport PostImages from \"./PostImages\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./PostCardContent\";\nimport {\n  LIKE_POST_REQUEST,\n  REMOVE_POST_REQUEST,\n  RETWEET_REQUEST,\n  UNLIKE_POST_REQUEST,\n} from \"../reducers/post\";\nimport FollowButton from \"./FollowButton\";\n\nfunction PostCard({ post }) {\n  const dispatch = useDispatch();\n  const id = useSelector((state) => state.user.me?.id);\n  const { removePostLoading, retweetError } = useSelector(\n    (state) => state.post\n  );\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n  const liked = post.Likers.find((v) => v.id === id);\n\n  // useEffect(() => {\n  //   if (retweetError) {\n  //     alert(retweetError);\n  //   }\n  // }, [retweetError]);\n\n  const onLike = useCallback(() => {\n    dispatch({\n      type: LIKE_POST_REQUEST,\n      data: post.id,\n    });\n  }, []);\n\n  const onUnLike = useCallback(() => {\n    dispatch({\n      type: UNLIKE_POST_REQUEST,\n      data: post.id,\n    });\n  }, []);\n\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened((prev) => !prev);\n  }, []);\n\n  const onRemovePost = useCallback(() => {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id,\n    });\n  }, []);\n\n  const onRetweet = useCallback(() => {\n    if (!id) {\n      return alert(\"로그인이 필요합니다.\");\n    }\n    return dispatch({\n      type: RETWEET_REQUEST,\n      data: post.id,\n    });\n  }, [id]);\n  return (\n    <div style={{ marginBottom: 20 }}>\n      <Card\n        cover={post.Images[0] && <PostImages images={post.Images} />}\n        actions={[\n          <RetweetOutlined key=\"retweet\" onClick={onRetweet} />,\n          liked ? (\n            <HeartTwoTone\n              twoToneColor=\"#eb2f96\"\n              key=\"heart\"\n              onClick={onUnLike}\n            />\n          ) : (\n            <HeartOutlined key=\"heart\" onClick={onLike} />\n          ),\n          <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\n          <Popover\n            key=\"more\"\n            content={\n              <ButtonGroup>\n                {id && post.User.id === id ? (\n                  <>\n                    <Button>수정</Button>\n                    <Button\n                      type=\"danger\"\n                      onClick={onRemovePost}\n                      loading={removePostLoading}\n                    >\n                      삭제\n                    </Button>\n                  </>\n                ) : (\n                  <Button>신고</Button>\n                )}\n              </ButtonGroup>\n            }\n          >\n            <EllipsisOutlined />\n          </Popover>,\n        ]}\n        title={\n          post.RetweetId ? `${post.User.nickname}님이 리트윗하셨습니다.` : null\n        }\n        extra={id && <FollowButton post={post} />}\n      >\n        {post.RetweetId && post.Retweet ? (\n          <Card\n            cover={\n              post.Retweet.Images[0] && (\n                <PostImages images={post.Retweet.Images} />\n              )\n            }\n          >\n            <Card.Meta\n              avatar={<Avatar>{post.Retweet.User.nickname[0]}</Avatar>}\n              title={post.Retweet.User.nickname}\n              description={<PostCardContent postData={post.Retweet.content} />}\n            />\n          </Card>\n        ) : (\n          <Card.Meta\n            avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n            title={post.User.nickname}\n            description={<PostCardContent postData={post.content} />}\n          />\n        )}\n      </Card>\n      {commentFormOpened && (\n        <div>\n          <CommentForm post={post} />\n          <List\n            header={`${post.Comments.length}개의 댓글`}\n            itemLayout=\"horizontal\"\n            dataSource={post.Comments}\n            renderItem={(item) => (\n              <li>\n                <Comment\n                  author={item.User.nickname}\n                  avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\n                  content={item.content}\n                />\n              </li>\n            )}\n          />\n        </div>\n      )}\n      {/* <CommentForm />\n      <Comments /> */}\n    </div>\n  );\n}\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Likers: PropTypes.arrayOf(PropTypes.object),\n    RetweetId: PropTypes.number,\n    Retweet: PropTypes.objectOf(PropTypes.any),\n  }).isRequired,\n};\n\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}
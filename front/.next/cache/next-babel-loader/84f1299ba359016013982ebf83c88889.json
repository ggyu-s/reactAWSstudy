{"ast":null,"code":"import produce from \"immer\";\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unLikePostLoading: false,\n  unLikePostDone: false,\n  unLikePostError: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetError: null\n};\nconst ADD_POST = \"ADD_POST\";\nexport const addPost = {\n  type: ADD_POST\n};\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\nexport const LOAD_POST_REQUEST = \"LOAD_POST_REQUEST\";\nexport const LOAD_POST_SUCCESS = \"LOAD_POST_SUCCESS\";\nexport const LOAD_POST_FAILURE = \"LOAD_POST_FAILURE\";\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\nexport const UPLOAD_IMAGES_REQUEST = \"UPLOAD_IMAGES_REQUEST\";\nexport const UPLOAD_IMAGES_SUCCESS = \"UPLOAD_IMAGES_SUCCESS\";\nexport const UPLOAD_IMAGES_FAILURE = \"UPLOAD_IMAGES_FAILURE\";\nexport const RETWEET_REQUEST = \"RETWEET_REQUEST\";\nexport const RETWEET_SUCCESS = \"RETWEET_SUCCESS\";\nexport const RETWEET_FAILURE = \"RETWEET_FAILURE\";\nexport const REMOVE_IMAGE = \"REMOVE_IMAGE\";\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        draft.hasMorePosts = action.data.length === 10;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.mainPosts.unshift(action.data);\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.imagePaths = [];\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n          post.Comments.unshift(action.data); // const postIndex = state.mainPosts.findIndex(\n          //   (v) => v.id === action.data.postId\n          // );\n          // const post = { ...state.mainPosts[postIndex] };\n          // post.Comments = [dummyConmment(action.data), ...post.Comments];\n          // const mainPosts = [...state.mainPosts];\n          // mainPosts[postIndex] = post;\n\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break;\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data.PostId);\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        {\n          draft.likePostLoading = false;\n          draft.likePostDone = true;\n          const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n          post.Likers.push({\n            id: action.data.UserId\n          });\n          break;\n        }\n\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n\n      case UNLIKE_POST_REQUEST:\n        draft.unLikePostLoading = true;\n        draft.unLikePostDone = false;\n        draft.unLikePostError = null;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        {\n          const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n          post.Likers = post.Likers.filter(v => v.id !== action.data.UserId);\n          draft.unLikePostLoading = false;\n          draft.unLikePostDone = true;\n          break;\n        }\n\n      case UNLIKE_POST_FAILURE:\n        draft.unLikePostLoading = false;\n        draft.unLikePostError = action.error;\n        break;\n\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesError = null;\n        break;\n\n      case UPLOAD_IMAGES_SUCCESS:\n        {\n          draft.imagePaths.push(action.data);\n          draft.uploadImagesLoading = false;\n          draft.uploadImagesDone = true;\n          break;\n        }\n\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesError = action.error;\n        break;\n\n      case RETWEET_REQUEST:\n        draft.retweetLoading = true;\n        draft.retweetDone = false;\n        draft.retweetError = null;\n        break;\n\n      case RETWEET_SUCCESS:\n        {\n          draft.retweetLoading = false;\n          draft.retweetDone = true;\n          draft.mainPosts.unshift(action.data);\n          break;\n        }\n\n      case RETWEET_FAILURE:\n        draft.retweetLoading = false;\n        draft.retweetError = action.error;\n        break;\n\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/ggyu/Library/Mobile Documents/com~apple~CloudDocs/My/Front/reactnodestudy/front/reducers/post.js"],"names":["produce","initialState","mainPosts","imagePaths","hasMorePosts","loadPostsLoading","loadPostsDone","loadPostsError","loadPostLoading","loadPostDone","loadPostError","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","removePostLoading","removePostDone","removePostError","likePostLoading","likePostDone","likePostError","unLikePostLoading","unLikePostDone","unLikePostError","uploadImagesLoading","uploadImagesDone","uploadImagesError","retweetLoading","retweetDone","retweetError","ADD_POST","addPost","type","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_IMAGE","reducer","state","action","draft","concat","data","length","error","unshift","post","find","v","id","PostId","Comments","filter","Likers","push","UserId","i"],"mappings":"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","sourcesContent":["import produce from \"immer\";\n\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unLikePostLoading: false,\n  unLikePostDone: false,\n  unLikePostError: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetError: null,\n};\n\nconst ADD_POST = \"ADD_POST\";\nexport const addPost = {\n  type: ADD_POST,\n};\n\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\n\nexport const LOAD_POST_REQUEST = \"LOAD_POST_REQUEST\";\nexport const LOAD_POST_SUCCESS = \"LOAD_POST_SUCCESS\";\nexport const LOAD_POST_FAILURE = \"LOAD_POST_FAILURE\";\n\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\n\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\n\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\n\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\n\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\n\nexport const UPLOAD_IMAGES_REQUEST = \"UPLOAD_IMAGES_REQUEST\";\nexport const UPLOAD_IMAGES_SUCCESS = \"UPLOAD_IMAGES_SUCCESS\";\nexport const UPLOAD_IMAGES_FAILURE = \"UPLOAD_IMAGES_FAILURE\";\n\nexport const RETWEET_REQUEST = \"RETWEET_REQUEST\";\nexport const RETWEET_SUCCESS = \"RETWEET_SUCCESS\";\nexport const RETWEET_FAILURE = \"RETWEET_FAILURE\";\n\nexport const REMOVE_IMAGE = \"REMOVE_IMAGE\";\n\nconst reducer = (state = initialState, action) => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        draft.hasMorePosts = action.data.length === 10;\n        break;\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.mainPosts.unshift(action.data);\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.imagePaths = [];\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        post.Comments.unshift(action.data);\n        // const postIndex = state.mainPosts.findIndex(\n        //   (v) => v.id === action.data.postId\n        // );\n        // const post = { ...state.mainPosts[postIndex] };\n        // post.Comments = [dummyConmment(action.data), ...post.Comments];\n        // const mainPosts = [...state.mainPosts];\n        // mainPosts[postIndex] = post;\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n      }\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(\n          (v) => v.id !== action.data.PostId\n        );\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n      case LIKE_POST_SUCCESS: {\n        draft.likePostLoading = false;\n        draft.likePostDone = true;\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        post.Likers.push({ id: action.data.UserId });\n        break;\n      }\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n      case UNLIKE_POST_REQUEST:\n        draft.unLikePostLoading = true;\n        draft.unLikePostDone = false;\n        draft.unLikePostError = null;\n        break;\n      case UNLIKE_POST_SUCCESS: {\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\n        post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\n        draft.unLikePostLoading = false;\n        draft.unLikePostDone = true;\n        break;\n      }\n      case UNLIKE_POST_FAILURE:\n        draft.unLikePostLoading = false;\n        draft.unLikePostError = action.error;\n        break;\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesError = null;\n        break;\n      case UPLOAD_IMAGES_SUCCESS: {\n        draft.imagePaths.push(action.data);\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesDone = true;\n        break;\n      }\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesError = action.error;\n        break;\n      case RETWEET_REQUEST:\n        draft.retweetLoading = true;\n        draft.retweetDone = false;\n        draft.retweetError = null;\n        break;\n      case RETWEET_SUCCESS: {\n        draft.retweetLoading = false;\n        draft.retweetDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n      }\n      case RETWEET_FAILURE:\n        draft.retweetLoading = false;\n        draft.retweetError = action.error;\n        break;\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\n        break;\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}
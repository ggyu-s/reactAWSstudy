{"version":3,"sources":["webpack://_N_E/./components/PostForm.js","webpack://_N_E/./pages/index.js","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js"],"names":["PostForm","imageInput","useRef","dispatch","useDispatch","useSelector","state","post","addPostDone","addPostLoading","imagePaths","useInput","text","onChangeText","setText","useEffect","onSubmit","useCallback","formData","FormData","forEach","p","append","type","ADD_POST_REQUEST","data","onClickImageUpload","e","current","click","onChangeImage","imageFormData","call","target","files","f","UPLOAD_IMAGES_REQUEST","onRemoveImage","index","REMOVE_IMAGE","style","margin","encType","onFinish","TextArea","value","onChange","maxLength","placeholder","name","multiple","hidden","ref","onClick","float","htmlType","loading","map","v","i","display","src","width","alt","Home","me","user","mainPosts","hasMorePosts","loadPostsLoading","retweetError","alert","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","console","log","lastId","length","id","LOAD_POSTS_REQUEST","addEventListener","removeEventListener","AppLayout","PostCard","__NEXT_P","push"],"mappings":"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","file":"static/chunks/pages/index-5de3048d6e5fce683fab.js","sourcesContent":["import { Button, Form, Input } from \"antd\";\nimport React, { useCallback, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useInput from \"../hooks/useInput\";\nimport {\n  ADD_POST_REQUEST,\n  REMOVE_IMAGE,\n  UPLOAD_IMAGES_REQUEST,\n} from \"../reducers/post\";\n\nfunction PostForm() {\n  const imageInput = useRef();\n  const dispatch = useDispatch();\n  const { addPostDone, addPostLoading } = useSelector((state) => state.post);\n  const { imagePaths } = useSelector((state) => state.post);\n  const [text, onChangeText, setText] = useInput(\"\");\n\n  useEffect(() => {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n\n  const onSubmit = useCallback(() => {\n    const formData = new FormData();\n    imagePaths.forEach((p) => {\n      formData.append(\"image\", p);\n    });\n    formData.append(\"content\", text);\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData,\n    });\n  }, [text, imagePaths]);\n\n  const onClickImageUpload = useCallback(\n    (e) => {\n      imageInput.current.click();\n    },\n    [imageInput.current]\n  );\n\n  const onChangeImage = useCallback((e) => {\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, (f) => {\n      imageFormData.append(\"image\", f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData,\n    });\n  }, []);\n  const onRemoveImage = useCallback(\n    (index) => () => {\n      dispatch({\n        type: REMOVE_IMAGE,\n        data: index,\n      });\n    },\n    []\n  );\n\n  return (\n    <Form\n      style={{ margin: \"10px 0 20px\" }}\n      encType=\"multipart/form-data\"\n      onFinish={onSubmit}\n    >\n      <Input.TextArea\n        value={text}\n        onChange={onChangeText}\n        maxLength={140}\n        placeholder=\"포스트 입력\"\n      />\n      <div>\n        <input\n          type=\"file\"\n          name=\"image\"\n          multiple\n          hidden\n          ref={imageInput}\n          onChange={onChangeImage}\n        />\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n        <Button\n          type=\"primary\"\n          style={{ float: \"right\" }}\n          htmlType=\"submit\"\n          loading={addPostLoading}\n        >\n          등록\n        </Button>\n      </div>\n      <div>\n        {imagePaths.map((v, i) => (\n          <div key={v} style={{ display: \"inline-block\" }}>\n            <img\n              src={`http://localhost:3065/${v}`}\n              style={{ width: \"200px\" }}\n              alt={v}\n            />\n            <div>\n              <Button onClick={onRemoveImage(i)}>제거</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </Form>\n  );\n}\n\nexport default PostForm;\n","import axios from \"axios\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { END } from \"redux-saga\";\nimport AppLayout from \"../components/AppLayout\";\nimport PostCard from \"../components/PostCard\";\nimport PostForm from \"../components/PostForm\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\nimport { LOAD_MY_INFO_REQUEST } from \"../reducers/user\";\nimport wrapper from \"../store/configureStore\";\n\nfunction Home() {\n  const dispatch = useDispatch();\n  const { me } = useSelector((state) => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading,\n    retweetError,\n  } = useSelector((state) => state.post);\n\n  useEffect(() => {\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n\n  useEffect(() => {\n    function onScroll() {\n      if (\n        window.scrollY + document.documentElement.clientHeight >\n        document.documentElement.scrollHeight - 300\n      ) {\n        if (hasMorePosts && !loadPostsLoading) {\n          console.log(hasMorePosts, loadPostsLoading);\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId,\n          });\n        }\n      }\n    }\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [hasMorePosts, loadPostsLoading]);\n  return (\n    <AppLayout>\n      {me && <PostForm />}\n      {mainPosts.map((post) => (\n        <PostCard key={post.id} post={post} />\n      ))}\n    </AppLayout>\n  );\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(\n  async (context) => {\n    const cookie = context.req ? context.req.headers.cookie : \"\";\n    console.log(cookie);\n    axios.defaults.headers.Cookie = \"\";\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch({\n      type: LOAD_MY_INFO_REQUEST,\n    });\n    context.store.dispatch({\n      type: LOAD_POSTS_REQUEST,\n    });\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default Home;\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.js\");\n      }\n    ]);\n  "],"sourceRoot":""}